knitr::opts_chunk$set(echo = TRUE)
#libraries
library(dplyr)
library(ggplot2)
library(nlme)
library(lme4)
packageVersion("lme4")
library(tidyr)
library(broom)
library(car)
library(MASS)
library(emmeans)
library(visreg)
library(fitdistrplus)
library(gamlss)
library(rjags)
library(gamlss)
library(effects)
setwd("~/Desktop/Anderson_data/herbivory/data/greenhouse/")
#read in data
gh2 <- read.csv("GHSummary2021.csv")
#gh2 <- drop_na(gh2,LAR)
gh2 $S_elev<-scale(gh2$elevation,center=TRUE, scale=TRUE)
gh2$elev<-gh2$elevation/1000
gh2 $S_init_size<-scale(gh2$ini_size,center=TRUE, scale=TRUE)
##convert LAR from most recent exposure (LAR 13) to proportion
gh2$LAR_prop<- gh2$LAR13/100
hist(gh2$LAR13)
#Check that the conversion worked
hist(gh2$LAR_prop)
#head(gh2)
##Some of your variables are being read as characters not factors. Let's fix that
gh2$genotype<-as.factor(gh2$genotype)
gh2$treatment<-as.factor(gh2$treatment)
gh2$block<-as.factor(gh2$block)
gh2$mat_treat<-as.factor(gh2$mat_treat)
gh2$mat_exp_ID <-as.factor(gh2$mat_exp_ID) #need to include this as random effect since multiple reps per mat line
RC_Tri<- glmer(avg_trichomes ~ treatment*mat_treat*elevation +(1|block),family=Gamma, data = gh2)
RC_Tri<- glmer(avg_trichomes ~ treatment*mat_treat*elev +(1|block),family=Gamma, data = gh2)
View(gh2)
RC_Tri<- glmer(avg_trichomes ~ treatment*mat_treat*elev +(1|block),family=Gamma, data = gh2)
fit.gamma <- fitdist(gh2$avg_trichomes, distr = "gamma", method = "mme")
gh2$round_trichomes <-round(gh2$average_trichomes)
gh2$round_trichomes <-round(gh2$avg_trichomes)
fit.gamma <- fitdist(gh2$round_trichomes, distr = "gamma", method = "mme")
RC_Tri<- glmer(round_trichomes ~ treatment*mat_treat*elev +(1|block),family=Gamma, data = gh2)
View(gh2)
gh2$1_trichomes <- gh2$avg_trichomes +1
gh2$trichomes <- gh2$avg_trichomes +1
RC_Tri<- glmer(trichomes ~ treatment*mat_treat*elev +(1|block),family=Gamma, data = gh2)
View(gh2)
gh2$trichomes <- gh2$avg_trichomes +0.001
RC_Tri<- glmer(trichomes ~ treatment*mat_treat*elev +(1|block),family=Gamma, data = gh2)
RC_Tri<- glmer(trichomes ~ treatment*mat_treat*elev +(1|block),family = Gamma(link=identity), data = gh2)
RC_Tri<- glmer(trichomes ~ treatment*mat_treat*elev +(1|block),family = Gamma(link=log()), data = gh2)
RC_Tri<- glmer(trichomes ~ treatment*mat_treat*elev +(1|block),family = Gamma(link=log), data = gh2)
Anova(RC_Tri)
plot (RC_Tri)
plot (RC_Tri)
visreg(RC_Tri, overlay = FALSE, "elevation", by="mat_treat", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
visreg(RC_Tri, overlay = FALSE, "elev", by="mat_treat", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
visreg(RC_Tri, overlay = FALSE, "elev", by="treatment", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
visreg(RC_Tri, "mat_treat", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
RC_Tri<- glmer(trichomes ~ treatment+mat_treat*elev +(1|block),family = Gamma(link=log), data = gh2)
Anova(RC_Tri)
plot (RC_Tri)
visreg(RC_Tri, "mat_treat", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
visreg(RC_Tri, "elev",  by="mat_treat" type="conditional", scale = "response",
visreg(RC_Tri, "elev",  by="mat_treat", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
RC_Tri<- glmer(trichomes ~ treatment+mat_treat*elev +(1|block),family = Gamma(link=log), data = gh2) #had errors but this seems to work when i specify link=log
Anova(RC_Tri) #
plot (RC_Tri)
visreg(RC_Tri, "elev",  by="mat_treat", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
RC_Tri<- glmer(trichomes ~ mat_treat*elev +(1|block),family = Gamma(link=log), data = gh2) #had errors but this seems to work when i specify link=log
Anova(RC_Tri) #
RC_Tri<- glmer(trichomes ~ mat_treat*elev+treatment +(1|block),family = Gamma(link=log), data = gh2) #had errors but this seems to work when i specify link=log
Anova(RC_Tri) #
RC_Tri<- glmer(trichomes ~ mat_treat*elev+treatment +(1|block),family = Gamma(link=log), control=glmerControl(nAGQ0initStep=FALSE) data = gh2)
RC_Tri<- glmer(trichomes ~ mat_treat*elev+treatment +(1|block),family = Gamma(link=log), control=glmerControl(nAGQ0initStep=FALSE), data = gh2)
Anova(RC_Tri) #
RC_Tri<- glmer(trichomes ~ mat_treat*elev+treatment +(1|block),family = Gamma(link=log), control=glmerControl(nAGQ0initStep=FALSE), verbose = 100, data = gh2)
Anova(RC_Tri) #
plot (RC_Tri)
visreg(RC_Tri, "elev",  by="mat_treat", type="conditional", scale = "response",
xlab="Elevation (m)", ylab="Avg Trichomes", partial=TRUE, cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(0.7,0.9))),
line=list(col=grey(c(0,0.5))),
points=list(cex=1.5,col=grey(c(0.2,0.8))))
knitr::opts_chunk$set(echo = TRUE)
#Setting up the environment (not printed)
#libraries
library(dplyr)
library(ggplot2)
library(nlme)
library(lme4)
packageVersion("lme4")
library(tidyr)
library(broom)
library(car)
library(MASS)
library(emmeans)
library(visreg)
library(fitdistrplus)
library(gamlss)
library(rjags)
library(gamlss)
library(effects)
setwd("~/Desktop/Anderson_data/herbivory/data/greenhouse/")
#read in data
gh2 <- read.csv("GHSummary2021.csv")
#gh2 <- drop_na(gh2,LAR)
gh2 $S_elev<-scale(gh2$elevation,center=TRUE, scale=TRUE)
gh2$elev<-gh2$elevation/1000
gh2 $S_init_size<-scale(gh2$ini_size,center=TRUE, scale=TRUE)
gh2$SLA100<-gh2$SLA*100
##convert LAR from census 3 (most damage) and census 13 (most recent) to proportion
gh2$LAR_prop3<- gh2$LAR3/100
hist(gh2$LAR3)
gh2$LAR_prop13<- gh2$LAR13/100
hist(gh2$LAR13)
#Check that the conversion worked
hist(gh2$LAR_prop13)
#head(gh2)
##Some of your variables are being read as characters not factors. Let's fix that
gh2$genotype<-as.factor(gh2$genotype)
gh2$treatment<-as.factor(gh2$treatment)
gh2$block<-as.factor(gh2$block)
gh2$mat_treat<-as.factor(gh2$mat_treat)
gh2$mat_exp_ID <-as.factor(gh2$mat_exp_ID) #need to include this as random effect since multiple reps per mat line
gh2$trichomes <- gh2$avg_trichomes +0.001 #added to do gamma glmer
