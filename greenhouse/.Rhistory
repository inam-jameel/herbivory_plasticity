library(ggeffects)
pred_sla <- ggpredict(sla_model, terms = c("S_elev[all]"), type = "re", interval="confidence")
sla_cline <-plot(pred_sla, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = c("black","black"), facet=TRUE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation")+ scale_y_continuous("Specific leaf area")
sla_cline
sla_model <- glmmTMB(SLA ~ LAR_avg_prop*mat_treat*elev_km+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
visreg(sla_model,"elev_km","LAR_avg_prop",xlab="Source elevation (Km)", ylab="Leaf area herbivorized")
visreg2d(sla_model,"elev_km","LAR_avg_prop",xlab="Source elevation (Km)", ylab="Leaf area herbivorized")
visreg3d(sla_model,"elev_km","LAR_avg_prop",xlab="Source elevation (Km)", ylab="Leaf area herbivorized")
SLA_RM_b <- lmer(SLA ~ LAR_avg_prop*mat_avgLAR*elev+season + (1|block)+(1|genotype)+(1|exp_ID),control = lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e7)), data = SLA_data)
sla_model <- glmmTMB(SLA ~ LAR_avg_prop*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
SLA_RM_b <- lmer(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev+season + (1|block)+(1|genotype)+(1|exp_ID),control = lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e7)), data = foliar)
SLA_RM_b <- lmer(SLA ~ LAR_avg_prop*mat_avgLAR*elev+season + (1|block)+(1|genotype)+(1|exp_ID),control = lmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e7)), data = foliar)
sla_model_b <- glmmTMB(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
Anova(sla_model_b, type = "III")
sla_model_b <- glmmTMB(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev*season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model_b, type = "III")
plot(SLA_RM_b)
plot(sla_model_b)
simulationOutput <- simulateResiduals(fittedModel= sla_model_b, plot = T, re.form = NULL,allow.new.levels =T)
#read in data
gh2 <- read.csv("greenhouse_noparent_long_04Apr24.csv")
setwd("~/OneDrive - University of Georgia/Inam_experiments/Herbivory_data/greenhouse/data")  #this is where you specify the folder where you have the data on your computer
#read in data
gh2 <- read.csv("greenhouse_noparent_long_04Apr24.csv")
gh2 <- filter(gh2, Include == "yes" )
gh2 $S_elev<-scale(gh2$elevation,center=TRUE, scale=TRUE)
gh2$elev_km<-gh2$elevation/1000
gh2 $S_init_size<-scale(gh2$ini_size,center=TRUE, scale=TRUE)
gh2$mat_avgLAR<- gh2$mat_avgLAR/100
hist(gh2$mat_avgLAR)
#summary
gh2$LAR_avg_prop<- gh2$avg_LAR/100
hist(gh2$LAR_avg_prop)
gh2$LAR_max_prop<- gh2$max_LAR/100
hist(gh2$LAR_max_prop)
gh2$LAR_4_prop<- gh2$LAR_4/100
hist(gh2$LAR_4_prop)
gh2$LAR_1_prop<- gh2$LAR_1/100
hist(gh2$LAR_1_prop)
gh2$LAR_2_prop<- gh2$LAR_2/100
hist(gh2$LAR_2_prop)
gh2$LAR_3_prop<- gh2$LAR_3/100
hist(gh2$LAR_3_prop)
gh2$season<-as.factor(gh2$season)
gh2$genotype<-as.factor(gh2$genotype)
gh2$treatment<-as.factor(gh2$treatment)
gh2$exp_ID<-as.factor(gh2$exp_ID)
gh2$block<-as.factor(gh2$block)
gh2$mat_treat<-as.factor(gh2$mat_treat)
gh2$mat_exp_ID <-as.factor(gh2$mat_exp_ID) #need to include this as random effect since multiple reps per mat line
##Change the baseline for maternal treatment
gh2 $mat_treat <-factor(gh2 $mat_treat, levels = c("herb", "cont"))
##Change the baseline for offspring treatment
gh2 $treatment <-factor(gh2 $treatment, levels = c("Herbivorized", "Control"))
gh2 $treat_mat<-interaction(gh2 $treatment, gh2 $mat_treat,sep = "_")
gh2 $S_LAR_avg_prop<-scale(gh2$LAR_avg_prop,center=TRUE, scale=TRUE) #scale avg damage
foliar<-subset(gh2,SLA>0)
foliar $S_elev<-scale(foliar $elevation,center=TRUE, scale=TRUE)
#Box_plot
SLA_box <-ggplot(foliar, aes(x = mat_treat, y = SLA, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Maternal treatment")+ scale_y_continuous("Specific leaf area") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
SLA_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c("darkred","#56B4E9"), name = "offspring treatment", labels = c("Included","excluded"))+facet_wrap(~treatment)
SLA_plot =ggplot(foliar, aes(x= elevation,y= SLA, color = treatment))+ geom_point(size=1)+ ggtitle("SLA by Souce Elevation")+scale_x_continuous("Source Elevation")+ scale_y_continuous("SLA") +theme_classic()+theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "bottom")+geom_smooth(method="lm", formula=y~x,  se=TRUE, size=1.6)+facet_wrap(~mat_treat)
SLA_plot
sla_model <- glmmTMB(SLA ~ treatment*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
simulationOutput <- simulateResiduals(fittedModel= sla_model, plot = T, re.form = NULL,allow.new.levels =T)
Anova(sla_model, type = "III")
sla_model <- glmmTMB(SLA ~ treatment*mat_treat*S_elev*season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
sla_model <- glmmTMB(SLA ~ treatment*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
sla_model <- glmmTMB(SLA ~ treatment*mat_treat*elev_km+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
sla_model <- glmmTMB(SLA ~ treatment*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
simulationOutput <- simulateResiduals(fittedModel= sla_model, plot = T, re.form = NULL,allow.new.levels =T)
library(ggeffects)
pred_sla <- ggpredict(sla_model, terms = c("S_elev[all]","treatment","mat_treat"), type = "re", interval="confidence")
sla_cline <-plot(pred_sla, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = c("black","black"), facet=TRUE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation")+ scale_y_continuous("Specific leaf area")
sla_cline
sla_cline <-plot(pred_sla, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = c("darkred","#56B4E9"), facet=TRUE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation")+ scale_y_continuous("Specific leaf area")
sla_cline
sla_cline <-plot(pred_sla, show_data=TRUE, show_title =FALSE, show_legend=TRUE, colors = c("darkred","#56B4E9"), facet=TRUE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation")+ scale_y_continuous("Specific leaf area")
sla_cline
SLA_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c("darkred","#56B4E9"), name = "offspring treatment", labels = c("Included","excluded"))+facet_wrap(~treatment)
SLA_means<-emmeans(sla_model, ~ treatment, type="response", adjust = "sidak")
cld(SLA_means, details=TRUE)
SLA_means<-emmeans(sla_model, ~ treatment:mat_treat, type="response", adjust = "sidak")
cld(SLA_means, details=TRUE)
#Box_plot
SLA_box <-ggplot(foliar, aes(x = treatment, y = SLA, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Maternal treatment")+ scale_y_continuous("Specific leaf area") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
SLA_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c("darkred","#56B4E9"), name = "offspring treatment", labels = c("Included","excluded"))+facet_wrap(~mat_treat)
SLA_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c("darkred","#56B4E9"))+facet_wrap(~mat_treat)
#Box_plot
SLA_box <-ggplot(foliar, aes(x = treatment, y = SLA, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Offspring treatment")+ scale_y_continuous("Specific leaf area") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
SLA_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c("darkred","#56B4E9"), name = "offspring treatment", labels = c("Included","excluded"))+facet_wrap(~mat_treat)
SLA_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c("darkred","#56B4E9"), name = "offspring treatment", labels = c("Included","excluded"))+facet_wrap(~mat_treat)
SLA_plot =ggplot(foliar, aes(x= elevation,y= SLA, color = treatment))+ geom_point(size=1)+ ggtitle("SLA by Souce Elevation")+scale_x_continuous("Source Elevation")+ scale_y_continuous("SLA") +theme_classic()+theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "bottom")+geom_smooth(method="lm", formula=y~x,  se=TRUE, size=1.6)+facet_wrap(~mat_treat)
SLA_plot
#Box_plot
SLA_box <-ggplot(foliar, aes(x = treatment, y = SLA, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Offspring treatment")+ scale_y_continuous("Specific leaf area") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
SLA_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c("darkred","#56B4E9"), name = "offspring treatment", labels = c("Included","excluded"))+facet_wrap(~mat_treat)
sla_model <- glmmTMB(SLA ~ LAR_avg_prop*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
#summary
gh2$LAR_avg_prop<- gh2$avg_LAR/100
hist(gh2$LAR_avg_prop)
View(foliar)
setwd("~/OneDrive - University of Georgia/Inam_experiments/Herbivory_data/greenhouse/data")  #this is where you specify the folder where you have the data on your computer
#read in data
gh2 <- read.csv("greenhouse_noparent_long_04Apr24.csv")
gh2 <- filter(gh2, Include == "yes" )
gh2 $S_elev<-scale(gh2$elevation,center=TRUE, scale=TRUE)
gh2$elev_km<-gh2$elevation/1000
gh2 $S_init_size<-scale(gh2$ini_size,center=TRUE, scale=TRUE)
# convert LAR  to proportion
#maternal leaf damage
gh2$mat_avgLAR<- gh2$mat_avgLAR/100
hist(gh2$mat_avgLAR)
#summary
gh2$LAR_avg_prop<- gh2$avg_LAR/100
hist(gh2$LAR_avg_prop)
gh2$LAR_max_prop<- gh2$max_LAR/100
hist(gh2$LAR_max_prop)
gh2$LAR_1_prop<- gh2$LAR_1/100
hist(gh2$LAR_1_prop)
gh2$LAR_2_prop<- gh2$LAR_2/100
hist(gh2$LAR_2_prop)
gh2$LAR_3_prop<- gh2$LAR_3/100
hist(gh2$LAR_3_prop)
##variables from characters to factors
gh2$season<-as.factor(gh2$season)
gh2$genotype<-as.factor(gh2$genotype)
gh2$treatment<-as.factor(gh2$treatment)
gh2$exp_ID<-as.factor(gh2$exp_ID)
gh2$block<-as.factor(gh2$block)
gh2$mat_treat<-as.factor(gh2$mat_treat)
gh2$mat_exp_ID <-as.factor(gh2$mat_exp_ID) #need to include this as random effect since multiple reps per mat line
##Change the baseline for maternal treatment
gh2 $mat_treat <-factor(gh2 $mat_treat, levels = c("herb", "cont"))
##Change the baseline for offspring treatment
gh2 $treatment <-factor(gh2 $treatment, levels = c("Herbivorized", "Control"))
gh2 $treat_mat<-interaction(gh2 $treatment, gh2 $mat_treat,sep = "_")
gh2 $S_LAR_avg_prop<-scale(gh2$LAR_avg_prop,center=TRUE, scale=TRUE) #scale avg damage
#gh2$trichomes <- gh2$avg_trichomes +0.001 #added to do gamma glmer
#*******************************************************************************
#### 1.SLA for greenhouse experiment #####
#*******************************************************************************
#### SLA  ####
foliar<-subset(gh2,SLA>0)
foliar $S_elev<-scale(foliar $elevation,center=TRUE, scale=TRUE)
sla_model <- glmmTMB(SLA ~ LAR_avg_prop*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
visreg2d(sla_model,"elev_km","LAR_avg_prop",xlab="Source elevation (Km)", ylab="Leaf area herbivorized")
visreg2d(sla_model,"S_elev","LAR_avg_prop",xlab="Source elevation (Km)", ylab="Leaf area herbivorized")
sla_model_b <- glmmTMB(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev*season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model_b, type = "III")
sla_model_b <- glmmTMB(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model_b, type = "III")
sla_model <- glmmTMB(SLA ~ LAR_max_prop*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III")
sla_model_b <- glmmTMB(SLA ~ LAR_max_prop*mat_avgLAR*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model_b, type = "III")
sla_model_b <- glmmTMB(SLA ~ LAR_max_prop*mat_avgLAR*S_elev*season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model_b, type = "III")
simulationOutput <- simulateResiduals(fittedModel= sla_model_b, plot = T, re.form = NULL,allow.new.levels =T)
Anova(sla_model, type = "III")
simulationOutput <- simulateResiduals(fittedModel= sla_model, plot = T, re.form = NULL,allow.new.levels =T)
sla_model_b <- glmmTMB(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev*season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
sla_model_b <- glmmTMB(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model_b, type = "III")
sla_model_b <- lmer(SLA ~ LAR_avg_prop*mat_avgLAR*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model_b, type = "III")
sla_model <- glmmTMB(SLA ~ treatment*mat_treat*S_elev+season+(1|exp_ID)+(1|genotype)+(1|block), data = foliar, family= lognormal(link="log"))
Anova(sla_model, type = "III") #treatment is significant
simulationOutput <- simulateResiduals(fittedModel= sla_model, plot = T, re.form = NULL,allow.new.levels =T)
LAR_data<- gh2 %>% pivot_longer(cols=c('LAR_1_prop', 'LAR_2_prop', 'LAR_3_prop'),
names_to='census',
values_to='LAR')
LAR_data <- dplyr::select(LAR_data, LAR, S_elev,elev, genotype, treatment, mat_treat, exp_ID, S_init_size, block, census,mat_avgLAR)
LAR_data <- dplyr::select(LAR_data, LAR, S_elev,elevation, genotype, treatment, mat_treat, exp_ID, S_init_size, block, census,mat_avgLAR)
LAR_data$census[LAR_data$census == "LAR_1_prop"] <- "1"
LAR_data$census[LAR_data$census == "LAR_2_prop"] <- "2"
LAR_data$census[LAR_data$census == "LAR_3_prop"] <-"3"
ggplot(LAR_data, aes(x= LAR))+ geom_histogram(color="black", fill="white")+ facet_grid(census ~  .)
LAR_data$census<-as.factor(LAR_data$census)
LAR_data <- drop_na(LAR_data,LAR)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
########################
#Box_plot
LAR_box <-ggplot(LAR_data, aes(x = treatment, y = y_beta, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivore Water")+ scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
LAR_box + theme_classic() + theme(text = element_text(size=14),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("No herbivory", "Herbivory")) +  scale_fill_manual(values = c("#CC79A7","lightblue"), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+facet_wrap(~mat_treat)
cols=c("darkred","#56B4E9")
LAR_box + theme_classic() + theme(text = element_text(size=14),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("No herbivory", "Herbivory")) +  scale_fill_manual(values = cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+facet_wrap(~mat_treat)
LAR_box + theme_classic() + theme(text = element_text(size=14),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("No herbivory", "Herbivory")) +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+facet_wrap(~mat_treat)
########################
#Box_plot
LAR_box <-ggplot(LAR_data, aes(x = treatment, y = y_beta, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivory Treatment")+ scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
LAR_box + theme_classic() + theme(text = element_text(size=14),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("No herbivory", "Herbivory")) +  scale_fill_manual(values = c(cols), name = "Herbivory treatment", labels = c("Herbivorized","Control"))+facet_wrap(~mat_treat)
LAR_box + theme_classic() + theme(text = element_text(size=14),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c(cols), name = "Herbivory treatment", labels = c("Herbivorized","Control"))+facet_wrap(~mat_treat)
LAR_plot =ggplot(LAR_data, aes(x= elevation,y= y_beta, color = treatment))+ geom_point(size=1)+ ggtitle("SLA by Souce Elevation")+scale_x_continuous("Source Elevation")+ scale_y_continuous("SLA") +theme_classic()+theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "bottom")+geom_smooth(method="lm", formula=y~x,  se=TRUE, size=1.6)+facet_wrap(~mat_treat)
LAR_plot
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*treatment*mat_treat+ random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
plot(LAR_Model)
summary(LAR_Model)
damage_model <- glmmTMB(y_beta ~S_elev*mat_treat*treatment + (1|census)+ (1| exp_ID)+ (1| block)+ (1| genotype), data=LAR_data, family=beta_family())
summary(damage_model)
library(betareg)
beta_modela<- betareg ( y_beta ~elev*mat_treat+census, data=LAR_data)
beta_modela<- betareg ( y_beta ~S_elev*mat_treat+census, data=LAR_data)
Anova(beta_modela,type="III")
beta_modela<- betareg ( y_beta ~S_elev*mat_treat*treatment+census, data=LAR_data)
Anova(beta_modela,type="III")
beta_modela<- betareg ( y_beta ~S_elev*mat_treat*treatment*census, data=LAR_data)
Anova(beta_modela,type="III")
beta_modela<- betareg ( y_beta ~S_elev*mat_treat*treatment+census, data=LAR_data)
Anova(beta_modela,type="III")
visreg(beta_modela, "elev", scale="response")
beta_modela<- betareg ( y_beta ~elev_km*mat_treat*treatment+census, data=LAR_data)
beta_modela<- betareg ( y_beta ~elevation*mat_treat*treatment+census, data=LAR_data)
Anova(beta_modela,type="III")
beta_modela<- betareg ( y_beta ~S_elev*mat_treat*treatment+census, data=LAR_data)
Anova(beta_modela,type="III")
visreg(beta_modela, "elev", scale="response")
visreg(beta_modela, "S_elev", scale="response")
visreg(beta_modela, 'S_elev', by= "mat_treat", overlay = TRUE, type="conditional",
scale = "response",
xlab="Source Elevation (Km)", ylab="Damage by herbivores (beta transformation)", partial=FALSE,# cex.lab = 1.5,cex.axis = 1.5,
fill=list(col=grey(c(1), alpha=0.1)),
line=list(col=c("#6699cc","#882255")),
points=list(cex=1.5,col=c("#6699cc","#882255","")))
gamlss_moda<- gamlss (formula= y_beta ~elev*mat_treat+census + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500)) #have to use logit link, dont need to specify, but i did here
gamlss_moda<- gamlss (formula= y_beta ~elev_km*mat_treat+census + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500)) #have to use logit link, dont need to specify, but i did here
gamlss_moda<- gamlss (formula= y_beta ~S_elev*mat_treat+census + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500)) #have to use logit link, dont need to specify, but i did here
summary(gamlss_moda)
#Subsets of models for drop 1
LAR_Model_three<- gamlss (formula= y_beta ~S_elev*treatment*mat_treat+S_elev*treatment*year+S_elev* mat_treat*year+ treatment* mat_treat*year+ random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*treatment*mat_treat+census + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*treatment*mat_treat+season random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*treatment*mat_treat+season +random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
LAR_data <- dplyr::select(LAR_data, LAR, S_elev,elevation, genotype, treatment, mat_treat, exp_ID, S_init_size, block,season, census,mat_avgLAR)
LAR_data<- gh2 %>% pivot_longer(cols=c('LAR_1_prop', 'LAR_2_prop', 'LAR_3_prop'),
names_to='census',
values_to='LAR')
LAR_data <- dplyr::select(LAR_data, LAR, S_elev,elevation, genotype, treatment, mat_treat, exp_ID, S_init_size, block,season, census,mat_avgLAR)
LAR_data$census[LAR_data$census == "LAR_1_prop"] <- "1"
LAR_data$census[LAR_data$census == "LAR_2_prop"] <- "2"
LAR_data$census[LAR_data$census == "LAR_3_prop"] <-"3"
ggplot(LAR_data, aes(x= LAR))+ geom_histogram(color="black", fill="white")+ facet_grid(census ~  .)
LAR_data$census<-as.factor(LAR_data$census)
LAR_data <- drop_na(LAR_data,LAR)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
########################
#Box_plot
LAR_box <-ggplot(LAR_data, aes(x = treatment, y = y_beta, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivory Treatment")+ scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
LAR_box + theme_classic() + theme(text = element_text(size=14),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c(cols), name = "Herbivory treatment", labels = c("Herbivorized","Control"))+facet_wrap(~mat_treat)
LAR_plot =ggplot(LAR_data, aes(x= elevation,y= y_beta, color = treatment))+ geom_point(size=1)+ ggtitle("SLA by Souce Elevation")+scale_x_continuous("Source Elevation")+ scale_y_continuous("SLA") +theme_classic()+theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "bottom")+geom_smooth(method="lm", formula=y~x,  se=TRUE, size=1.6)+facet_wrap(~mat_treat)
LAR_plot
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*treatment*mat_treat+season +random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
plot(LAR_Model)
summary(LAR_Model)
#Subsets of models for drop 1
LAR_Model_three<- gamlss (formula= y_beta ~S_elev*treatment*mat_treat+S_elev*treatment*season+S_elev* mat_treat*season+ treatment* mat_treat*season+ random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
drop1(LAR_Model_three)
LAR_Model_two<- gamlss (formula= y_beta ~S_elev*treatment+S_elev*mat_treat+ treatment* mat_treat+season*treatment+season*mat_treat+S_elev*season+ random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
drop1(LAR_Model_two)
LAR_Model_one<- gamlss (formula= y_beta ~S_elev+treatment+mat_treat+ season+ random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
drop1(LAR_Model_one)
drop1(LAR_Model)
summary(LAR_Model)
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*season+S_elev*treatment*mat_treat +random(census) + random(exp_ID)+ random(block)+random(genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
plot(LAR_Model)
summary(LAR_Model)
damage_model <- glmmTMB(y_beta ~S_elev*mat_treat*treatment*season + (1| census)+ (1|exp_ID)+ (1| block)+ (1| genotype), data=LAR_data, family=beta_family())
summary(damage_model)
simulationOutput <- simulateResiduals(fittedModel= damage_model, plot = T, re.form = NULL,allow.new.levels =T)
damage_model <- glmmTMB(y_beta ~S_elev*mat_treat*treatment+season + (1| census)+ (1|exp_ID)+ (1| block)+ (1| genotype), data=LAR_data, family=beta_family())
simulationOutput <- simulateResiduals(fittedModel= damage_model, plot = T, re.form = NULL,allow.new.levels =T)
summary(damage_model)
########################
#Box_plot
LAR_box <-ggplot(LAR_data, aes(x = treatment, y = y_beta, fill = treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivory Treatment")+ scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, size = .5,position = position_jitterdodge(0.3))
LAR_box + theme_classic() + theme(text = element_text(size=14),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Herbivorized", "Control")) +  scale_fill_manual(values = c(cols), name = "Herbivory treatment", labels = c("Herbivorized","Control"))+facet_wrap(~mat_treat)
LAR_plot =ggplot(LAR_data, aes(x= elevation,y= y_beta, color = treatment))+ geom_point(size=1)+ ggtitle("SLA by Souce Elevation")+scale_x_continuous("Source Elevation")+ scale_y_continuous("SLA") +theme_classic()+theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "bottom")+geom_smooth(method="lm", formula=y~x,  se=TRUE, size=1.6)+facet_wrap(~mat_treat+season)
LAR_plot
LAR_plot =ggplot(LAR_data, aes(x= elevation,y= y_beta, color = treatment))+ geom_point(size=1)+ ggtitle("SLA by Souce Elevation")+scale_x_continuous("Source Elevation")+ scale_y_continuous("LAR") +theme_classic()+theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "bottom")+geom_smooth(method="lm", formula=y~x,  se=TRUE, size=1.6)+facet_wrap(~mat_treat+season)
LAR_plot
newdf2 <- LAR_data %>%
mutate(fit.m = predict(LAR_Model, se.fit=FALSE),
resid = residuals(LAR_Model))
##Convert coefficients to probabilities
newdf2 $predicted<-1/(1+exp(-(newdf2 $fit.m)))
newdf2 $resid_trans<-1/(1+exp(-(newdf2 $resid)))
LAR_fig= ggplot(newdf2, aes(x= S_elev,y= predicted, group= treatment, colour= treatment))+geom_point(size=2,aes(x= S_elev,y= LAR_prop)) + scale_y_continuous("Leaf area removed by herbivores (proportion)")+ scale_x_continuous("Source Elevation")
LAR_fig + theme_bw() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),  axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "top")  +scale_colour_manual(values = c("#CC79A7","lightblue"), name = "Water treatment", labels = c("Restricted","Supplemental")) +geom_smooth(method = "glm",
method.args = list(family = "quasibinomial"),  se = FALSE) + facet_wrap(~ Herbivore:year)
LAR_fig= ggplot(newdf2, aes(x= S_elev,y= predicted, group= treatment, colour= treatment))+geom_point(size=2,aes(x= S_elev,y= LAR_prop)) + scale_y_continuous("Leaf area removed by herbivores (proportion)")+ scale_x_continuous("Source Elevation")
LAR_fig + theme_bw() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),  axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "top")  +scale_colour_manual(values = c("#CC79A7","lightblue"), name = "Water treatment", labels = c("Restricted","Supplemental")) +geom_smooth(method = "glm", method.args = list(family = "quasibinomial"),  se = FALSE) + facet_wrap(~ mat_treat:season)
LAR_fig= ggplot(newdf2, aes(x= S_elev,y= predicted, group= treatment, colour= treatment))+geom_point(size=2,aes(x= S_elev,y= LAR)) + scale_y_continuous("Leaf area removed by herbivores (proportion)")+ scale_x_continuous("Source Elevation")
LAR_fig + theme_bw() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),  axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "top")  +scale_colour_manual(values = c("#CC79A7","lightblue"), name = "Water treatment", labels = c("Restricted","Supplemental")) +geom_smooth(method = "glm", method.args = list(family = "quasibinomial"),  se = FALSE) + facet_wrap(~ mat_treat:season)
LAR_fig + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),  axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "top")  +scale_colour_manual(values = c("#CC79A7","lightblue"), name = "Water treatment", labels = c("Restricted","Supplemental")) +geom_smooth(method = "glm", method.args = list(family = "quasibinomial"),  se = FALSE) + facet_wrap(~ mat_treat:season)
LAR_fig + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),  axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "top")  +scale_colour_manual(values = c(cols), name = "Herbivore treatment", labels = c("Herbivorized","Control")) +geom_smooth(method = "glm", method.args = list(family = "quasibinomial"),  se = FALSE) + facet_wrap(~ mat_treat:season)
hurdle_Model<- glmmTMB(Mature_length_siliques ~treatment*S_elev*mat_treat + (1|block)+ (1| genotype), zi=~treatment*S_elev*mat_treat + (1|block)+ (1| genotype),data = gh2 ,family=truncated_nbinom2)
View(gh2)
#### treatment ####
hist(gh2$mature_length_siliques)
hurdle_Model<- glmmTMB(mature_length_siliques ~treatment*S_elev*mat_treat + (1|block)+ (1| genotype), zi=~treatment*S_elev*mat_treat + (1|block)+ (1| genotype),data = gh2 ,family=truncated_nbinom2)
hurdle_Model<- glmmTMB(mature_length_siliques ~treatment*S_elev*mat_treat + (1|block)+ (1| genotype), zi=~treatment*S_elev*mat_treat + (1|block)+ (1| genotype),data = gh2 ,family=gamma)
hurdle_Model<- glmmTMB(round(mature_length_siliques) ~treatment*S_elev*mat_treat + (1|block)+ (1| genotype), zi=~treatment*S_elev*mat_treat + (1|block)+ (1| genotype),data = gh2 ,family=truncated_nbinom2)
Anova(hurdle_Model,type="III", component="zi")
Anova(hurdle_Model,type="III", component="cond")
hurdle_Model_repeateda <- glmmTMB(mature_length_siliques ~treatment*elev*mat_treat+season + (1|block)+ (1| genotype)+ (1| exp_ID), data=fruit_data, zi=~treatment*elev*mat_treat+season + (1|block)+ (1| genotype)+ (1| exp_ID),family=ziGamma(link="log"))
hurdle_Model_repeateda <- glmmTMB(mature_length_siliques ~treatment*elev*mat_treat+season + (1|block)+ (1| genotype)+ (1| exp_ID), data=gh2, zi=~treatment*elev*mat_treat+season + (1|block)+ (1| genotype)+ (1| exp_ID),family=ziGamma(link="log"))
hurdle_Model_repeateda <- glmmTMB(mature_length_siliques ~treatment*S_elev*mat_treat+season + (1|block)+ (1| genotype)+ (1| exp_ID), data=gh2, zi=~treatment*S_elev*mat_treat+season + (1|block)+ (1| genotype)+ (1| exp_ID),family=ziGamma(link="log"))
##This is the ANOVA table for the logistic regression part (probability of reproduction). It shows significiant source elevation.
Anova(hurdle_Model_repeateda,type="III", component="zi")
##This is the ANOVA table for the count part (fecundity amongst individuals that reproduced).
Anova(hurdle_Model_repeateda,type="III", component="cond")
gh_pf= ggplot(gh2, aes(x= elev,y= reproductive, group= treatment,
colour= treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
gh_pf + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ mat_treat, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("No Herbivores","Herbivorized"))
gh_pf= ggplot(gh2, aes(x= elevation,y= reproductive, group= treatment,
colour= treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
gh_pf + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ mat_treat, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("No Herbivores","Herbivorized"))
gh_pf= ggplot(gh2, aes(x= elevation,y= reproduced, group= treatment,
colour= treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
gh_pf + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ mat_treat, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("No Herbivores","Herbivorized"))
mod_repro<-glmmTMB(reproduced~S_elev*treatment*mat_treat+season+(1|block)+(1|genotype)+(1|exp_ID),data=repro_data,family=binomial(link="logit"))
mod_repro<-glmmTMB(reproduced~S_elev*treatment*mat_treat+season+(1|block)+(1|genotype)+(1|exp_ID),data=gh2,family=binomial(link="logit"))
Anova(mod_repro, type="III") #sig interaction btw mat_treat and elev
visreg(mod_repro,"treatment", by="mat_treat", overlay=FALSE,  scale = "response", xlab="Source elevation (Km)", ylab="Probability of flowering", partial=TRUE,type="conditional",line=list(lty=1:3,col="black"), points=list(col="black"),fill=list(col=grey(c(0.8), alpha=0.4)))
simulationOutput <- simulateResiduals(fittedModel= mod_repro, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_repro, type="III") #sig interaction btw mat_treat and elev
Prob_violin <-ggplot(gh2, aes(x = treatment, y = reproduced, fill = treatment)) +
geom_violin() +xlab("Herbivory treatment")+
stat_summary(fun.data = "mean_cl_normal")+
scale_y_continuous("Probability of reproduction") +
geom_point(pch = 21, position = position_jitterdodge())
repro_treatment<-reproduced + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+facet_grid(~season+mat_treat)
repro_treatment<-Prob_violin + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+facet_grid(~season+mat_treat)
repro_treatment
repro_treatment<-Prob_violin + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+facet_grid(~mat_treat)
repro_treatment
mod_repro<-glmmTMB(reproduced~S_elev*treatment*mat_treat+season+(1|block)+(1|genotype)+(1|exp_ID),data=gh2,family=binomial(link="logit"))
Anova(mod_repro, type="III") #sig interaction btw mat_treat and elev
mod_repro<-glmmTMB(reproduced~S_elev*treatment*mat_treat+season+(1|block)+(1|genotype)+(1|exp_ID),data=gh2,family=binomial(link="logit"))
mod_repro<-glmmTMB(reproduced~S_elev*treatment*mat_treat*season+(1|block)+(1|genotype)+(1|exp_ID),data=gh2,family=binomial(link="logit"))
Anova(mod_repro, type="III") #sig interaction btw mat_treat and elev
mod_repro<-glmmTMB(reproduced~S_elev*treatment*mat_treat+season+(1|block)+(1|genotype)+(1|exp_ID),data=gh2,family=binomial(link="logit"))
simulationOutput <- simulateResiduals(fittedModel= mod_repro, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_repro, type="III") #sig interaction btw mat_treat and elev
repro_data $s_LAR_avg_prop<-scale(repro_data$LAR_avg_prop,center=TRUE, scale=TRUE) #doesnt need to be scaled, but i thought it would be good to be consistant
repro_data $s_mat_avgLAR<-scale(repro_data$mat_avgLAR,center=TRUE, scale=TRUE)
mod_repro_REavgLARb<-glmmTMB(reproduced~elev*mat_avgLAR*LAR_avg_prop+season+(1|block)+(1|genotype)+(1|exp_ID),data=repro_data,family=binomial(link="logit"))
mod_repro_REavgLARb<-glmmTMB(reproduced~elev*mat_avgLAR*LAR_avg_prop+season+(1|block)+(1|genotype)+(1|exp_ID),data=gh2,family=binomial(link="logit"))
mod_repro_REavgLARb<-glmmTMB(reproduced~S_elev*mat_avgLAR*LAR_avg_prop+season+(1|block)+(1|genotype)+(1|exp_ID),data=gh2,family=binomial(link="logit"))
Anova(mod_repro_REavgLARb,type="III") #sig interaction btw mat_treat and elev
visreg(mod_repro_REavgLAR,"S_elev", by="mat_avgLAR", overlay=FALSE,  scale = "response", xlab="Source elevation (Km)", ylab="Probability of flowering", partial=TRUE,type="conditional",line=list(lty=1:3,col="black"), points=list(col="black"),fill=list(col=grey(c(0.8), alpha=0.4)))
visreg(mod_repro_REavgLARb,"S_elev", by="mat_avgLAR", overlay=FALSE,  scale = "response", xlab="Source elevation (Km)", ylab="Probability of flowering", partial=TRUE,type="conditional",line=list(lty=1:3,col="black"), points=list(col="black"),fill=list(col=grey(c(0.8), alpha=0.4)))
simulationOutput <- simulateResiduals(fittedModel= mod_repro_REavgLARb, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_repro_REavgLARb,type="III") #sig interaction btw mat_treat and elev
pred_repro <- ggpredict(mod_repro_REavgLARb, terms = c("S_elev[all]","mat_avgLAR"), type = "re", interval="confidence")
test <-plot(pred_repro, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,2000)
test
test <-plot(pred_repro, show_data=FALSE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,2000)
test
test <-plot(pred_repro, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,1)
test
visreg2d(mod_repro_REavgLARb,"S_elev","mat_avgLAR", scale = "response", xlab="Source elevation (Km)", ylab="maternal damage (scaled)",col = colorRampPalette(brewer.pal(9,"Blues"))(20),zlim=c(0,1, by=.25))
visreg2d(mod_repro_REavgLARb,"S_elev","mat_avgLAR", scale = "response", xlab="Source elevation (Km)", ylab="maternal damage (scaled)",col = colorRampPalette(brewer.pal(9,"Blues"))(20),zlim=c(0,1, by=.1))
repro <- filter(gh2, mature_length_siliques > 0 )
gh_pf= ggplot(repro, aes(x= elev,y= round(mature_length_siliques), group= treatment,
colour= treatment))+geom_point(size=5) + scale_y_continuous("Fecundity(summed silique length)")+ scale_x_continuous("Source Elevation")
gh_pf + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ mat_treat, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("No Herbivores","Herbivorized"))
gh_pf= ggplot(repro, aes(x= elevation,y= round(mature_length_siliques), group= treatment,
colour= treatment))+geom_point(size=5) + scale_y_continuous("Fecundity(summed silique length)")+ scale_x_continuous("Source Elevation")
gh_pf + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ mat_treat, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("No Herbivores","Herbivorized"))
vioplot(round(mature_length_siliques) ~ treatment, data= repro, plotCentre = "point",  pchMed = 23,  horizontal= FALSE,colMed = "black",colMed2 = c("#6699cc","#882255","grey"), col=c("#6699cc","#882255","grey"), ylab="Fecundity(summed silique length)", xlab="Herbivore treatment")+stripchart(round(Overall_Mature_length_siliques) ~ mat_treat, data= gh2,  method = "jitter", col = alpha("black", 0.2), pch=16 ,vertical = TRUE, add = TRUE)
vioplot(mature_length_siliques ~ treatment, data= repro, plotCentre = "point",  pchMed = 23,  horizontal= FALSE,colMed = "black",colMed2 = c("#6699cc","#882255"), col=c("#6699cc","#882255"), ylab="Fecundity(summed silique length)", xlab="Herbivore treatment")+stripchart(mature_length_siliques) ~ mat_treat, data= gh2,  method = "jitter", col = alpha("black", 0.2), pch=16 ,vertical = TRUE, add = TRUE)
vioplot(mature_length_siliques ~ treatment, data= repro, plotCentre = "point",  pchMed = 23,  horizontal= FALSE,colMed = "black",colMed2 = c("#6699cc","#882255"), col=c("#6699cc","#882255"), ylab="Fecundity(summed silique length)", xlab="Herbivore treatment")+stripchart(mature_length_siliques ~ mat_treat, data= gh2,  method = "jitter", col = alpha("black", 0.2), pch=16 ,vertical = TRUE, add = TRUE)
vioplot(mature_length_siliques ~ treatment, data= repro, plotCentre = "point",  pchMed = 23,  horizontal= FALSE,colMed = "black",colMed2 = c("#6699cc","#882255"), col=c("#6699cc","#882255"), ylab="Fecundity(summed silique length)", xlab="Herbivore treatment")+stripchart(mature_length_siliques ~ treatmen, data= gh2,  method = "jitter", col = alpha("black", 0.2), pch=16 ,vertical = TRUE, add = TRUE)
vioplot(mature_length_siliques ~ treatment, data= repro, plotCentre = "point",  pchMed = 23,  horizontal= FALSE,colMed = "black",colMed2 = c("#6699cc","#882255"), col=c("#6699cc","#882255"), ylab="Fecundity(summed silique length)", xlab="Herbivore treatment")+stripchart(mature_length_siliques ~ treatment, data= gh2,  method = "jitter", col = alpha("black", 0.2), pch=16 ,vertical = TRUE, add = TRUE)
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment*S_elev*mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = only_repro)
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment*S_elev*mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment*S_elev*mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
Anova(mod_fecundity_avgLARa,type="III")
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (fruit_length ~ LAR_avg_prop*S_elev*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_avg_prop*S_elev*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
Anova(mod_fecundity_avgLARb,type="III")
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_max_prop*S_elev*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
Anova(mod_fecundity_avgLARb,type="III")
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_max_prop*elevation*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
Anova(mod_fecundity_avgLARb,type="III")
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_max_prop*elevation*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_max_prop*S_elev*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_max_prop*elev_km*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
Anova(mod_fecundity_avgLARb,type="III")
simulationOutput <- simulateResiduals(fittedModel= mod_fecundity_avgLARa, plot = T, re.form = NULL,allow.new.levels =T)
simulationOutput <- simulateResiduals(fittedModel= mod_fecundity_avgLARb, plot = T, re.form = NULL,allow.new.levels =T)
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_max_prop*S_elev*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
Anova(mod_fecundity_avgLARb,type="III")
#### avg damage ####
mod_fecundity_avgLARb <- glmmTMB (mature_length_siliques ~ LAR_avg_prop*S_elev*mat_avgLAR+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
simulationOutput <- simulateResiduals(fittedModel= mod_fecundity_avgLARb, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_fecundity_avgLARb,type="III")
gh_pf + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ mat_treat, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("No Herbivores","Herbivorized"))
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment*S_elev*mat_treat*season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
simulationOutput <- simulateResiduals(fittedModel= mod_fecundity_avgLARa, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_fecundity_avgLARa,type="III")
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment*S_elev*mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
simulationOutput <- simulateResiduals(fittedModel= mod_fecundity_avgLARa, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_fecundity_avgLARa,type="III")
summary(mod_fecundity_avgLARa)
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_silique_number ~ treatment*S_elev*mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment*S_elev*mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
Anova(mod_fecundity_avgLARa,type="III")
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment*S_elev+mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
simulationOutput <- simulateResiduals(fittedModel= mod_fecundity_avgLARa, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_fecundity_avgLARa,type="III")
#### treatment####
mod_fecundity_avgLARa <- glmmTMB (mature_length_siliques ~ treatment+S_elev+mat_treat+season  + (1| block)+(1|genotype)+(1|exp_ID), family=Gamma(link="log"), data = repro)
simulationOutput <- simulateResiduals(fittedModel= mod_fecundity_avgLARa, plot = T, re.form = NULL,allow.new.levels =T)
Anova(mod_fecundity_avgLARa,type="III")
summary(mod_fecundity_avgLARa)
