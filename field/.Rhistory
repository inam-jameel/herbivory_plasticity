LAR_data $Garden_Block<-interaction(LAR_data $garden, LAR_data $block,sep = "_")
##Box plot
LAR_box <-ggplot(LAR_data, aes(x = Treatment, y = LAR_prop, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(aes(shape=Treatment),position = position_jitterdodge(0.3))+scale_shape_manual(values=c(22,25))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols2), name = "Treatment", labels = c("Pesticide","Control"))+facet_grid(~garden)
damage_treatment
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment*garden+random(cohort)+ random(Garden_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
View(LAR_data)
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
LARdat<-field[,c(1:15,24)]
LAR_data <- drop_na(LARdat,LAR_aug22)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")#+ facet_grid(census ~  .)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
LAR_data $Garden_Block<-interaction(LAR_data $garden, LAR_data $block,sep = "_")
##Box plot
LAR_box <-ggplot(LAR_data, aes(x = Treatment, y = LAR_prop, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(aes(shape=Treatment),position = position_jitterdodge(0.3))+scale_shape_manual(values=c(22,25))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols2), name = "Treatment", labels = c("Pesticide","Control"))+facet_grid(~garden)
damage_treatment
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment*garden+random(cohort)+ random(Garden_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
damage_cline<-visregList(
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Gothic"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Gothic"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Schofield"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Schofield"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
collapse=TRUE)
damfit<-data.frame(damage_cline$fit)
damfit$visregFITexp<-exp(damfit$visregFit)
damage_clinal_variation<-ggplot(damfit, aes(S_elev, visregFITexp,group= Treatment, colour= Treatment, fill=factor(Treatment))) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "Bottom")+ geom_point(data= LAR_data, aes(S_elev, LAR_prop, color= Treatment, shape=Treatment), alpha=0.50, color="black")+scale_shape_manual(values=c(22,25), name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.582062, 0.1322301, 1.846522))+ scale_y_continuous("Leaf area removed by herbivores (proportion)")+scale_fill_manual(values = cols2, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols2, name = "Water treatment", labels = c("Restricted","Supplemental"))+ geom_line(aes(group=Treatment),size=1)+scale_linetype_manual(values=c("solid", "dotted"))+facet_grid(~garden)
damage_clinal_variation
##require packages
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for pairwise comparisons
require(glmmTMB) # for running models, have to load twice occasionally
require(gamlss) # for running herbivor damage model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
library(DHARMa) #for assessing model fits
library(ggeffects) #for plotting
library(ggpubr) #for arranging panels into figures
mod_LAR<- gamlss (formula= y_beta ~S_elev+Treatment*garden+random(cohort)+ random(Garden_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
summary(mod_LAR)
#summary(mod_LAR)
## Save  model to .rda file
#save(mod_LAR, file='mod_LAR.rda')
drop1(mod_LAR)
visreg(mod_LAR,"Treatment", by="garden", overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE)
visreg(mod_LAR,"Treatment", by="garden", overlay = FALSE, partial = FALSE, rug = FALSE,plot=true)
visreg(mod_LAR,"Treatment", by="garden", overlay = FALSE, partial = FALSE, rug = FALSE,plot=TRUE)
# remove objects and clear workspace
rm(list = ls(all=TRUE))
#require packages
require(lme4) #for running linear mixed models
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for plotting
require(glmmTMB) # for running survival model, have to load twice
require(gamlss) # for running phenology model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
require(DHARMa)
setwd("/Users/inam/Library/CloudStorage/OneDrive-UniversityofGeorgia/Inam_experiments/Herbivory_data/field")
#read in data
estess <- read.csv("estess2021_2021_summary.csv", stringsAsFactors = TRUE)
estess <- filter(estess, Exclude_2021 == "include")
##Change the baseline for pesticide treatment
estess $Treatment <-factor(estess $Treatment, levels = c("Control", "Pesticide"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
estess $S_elev<-scale(estess $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
estess $S_initdiam<-scale(estess $initial_size,center=TRUE, scale=TRUE)
#This rescales source elevation from meters to km
estess$elev_km<-estess $elevation/1000
#Subsetting data for plants that flowered
repro <- filter(estess, Flowered == 1) #only plants that flowered
#Subsetting data for plants that flowered
repro <- filter(estess, Flowered_2021 == 1) #only plants that flowered
cols=c("#882255","#6699cc")
field_R= ggplot(estess, aes(x= elev_km,y= Season_survival_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ garden, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R= ggplot(estess, aes(x= elev_km,y= Season_survival_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~poly(x,2)) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+I(S_elev^2)*Treatmen+(1|PlantID)+(1|Block)+(1|Genotype),data=field,family=binomial(link="logit"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+I(S_elev^2)*Treatmen+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+I(S_elev^2)*Treatment+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
Anova(mod_survR_LA,type="III")
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+I(S_elev^2)*Treatment+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
glmer(Season_survival_2021~ S_initdiam+S_elev*Treatment+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
surv_prob <- ggpredict(mod_survR_LA, terms = c("S_elev[all]","Treatment","garden"), type = "re", interval="confidence")
surv_plot <-plot(surv_prob, show_data=TRUE, show_title =FALSE, show_legend=TRUE, facet=FALSE,jitter=0.025)+theme(text = element_text(size=10),axis.ticks = element_line(colour = "black"),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position="right")+ scale_y_continuous("Probability of survival")+scale_x_continuous("Elevation")
require(lme4) #for running linear mixed models
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for plotting
require(glmmTMB) # for running survival model, have to load twice
require(gamlss) # for running phenology model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
require(DHARMa)
library(ggeffects)
surv_prob <- ggpredict(mod_survR_LA, terms = c("S_elev[all]","Treatment","garden"), type = "re", interval="confidence")
surv_prob <- ggpredict(mod_survR_LA, terms = c("S_elev[all]","Treatment"), type = "re", interval="confidence")
surv_plot <-plot(surv_prob, show_data=TRUE, show_title =FALSE, show_legend=TRUE, facet=FALSE,jitter=0.025)+theme(text = element_text(size=10),axis.ticks = element_line(colour = "black"),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position="right")+ scale_y_continuous("Probability of survival")+scale_x_continuous("Elevation")
surv_plot
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
#####repeated measures with all damage data####
LARdat<-estess[,c(1:14,54:99)]
LAR_data<- LARdat %>% pivot_longer(cols=c("LAR_1","LAR_2","LAR_3","LAR_4","LAR_5","LAR_6","LAR_7","LAR_8","LAR_9","LAR_10"),
names_to='census',
values_to='LAR')
LAR_data<- LARdat %>% pivot_longer(cols=c("LAR_1_2021","LAR_2_2021","LAR_3_2021","LAR_4_2021","LAR_5_2021","LAR_6_2021","LAR_7_2021","LAR_8_2021","LAR_9_2021","LAR_10_2021"),
names_to='census',
values_to='LAR')
LAR_data$census[LAR_data$census == "LAR_1_2021"] <- "1"
LAR_data$census[LAR_data$census == "LAR_2_2021"] <- "2"
LAR_data$census[LAR_data$census == "LAR_3_2021"] <-"3"
LAR_data$census[LAR_data$census == "LAR_4_2021"] <- "4"
LAR_data$census[LAR_data$census == "LAR_5_2021"] <- "5"
LAR_data$census[LAR_data$census == "LAR_6_2021"] <- "6"
LAR_data$census[LAR_data$census == "LAR_7_2021"] <- "7"
LAR_data$census[LAR_data$census == "LAR_8_2021"] <- "8"
LAR_data$census[LAR_data$census == "LAR_9_2021"] <- "9"
LAR_data$census[LAR_data$census == "LAR_10_2021"] <- "10"
LAR_data $census <-as.factor(LAR_data $census)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")+ facet_grid(census ~  .)
LAR_data <- drop_na(LAR_data,LAR_prop)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment+ random(census) + random(PlantID)+ random(Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
#read in data
estess <- read.csv("estess2021_wide.csv", stringsAsFactors = TRUE)
sapply(estess,class)
estess <- filter(estess, Exclude_2021 == "include")
##Change the baseline for pesticide treatment
estess $Treatment <-factor(estess $Treatment, levels = c("Control", "Pesticide"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
estess $S_elev<-scale(estess $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
estess $S_initdiam<-scale(estess $initial_size,center=TRUE, scale=TRUE)
#This rescales source elevation from meters to km
estess$elev_km<-estess $elevation/1000
#Subsetting data for plants that flowered
repro <- filter(estess, Flowered_2021 == 1) #only plants that flowered
cols=c("#882255","#6699cc")
field_R= ggplot(estess, aes(x= elev_km,y= Season_survival_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R= ggplot(estess, aes(x= elev_km,y= Overwinter_survival_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R= ggplot(estess, aes(x= elev_km,y= Flowered_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R= ggplot(estess, aes(x= elev_km,y= Season_survival_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
#####repeated measures with all damage data####
LARdat<-estess[,c(1:10,49:58)]
LAR_data<- LARdat %>% pivot_longer(cols=c("LAR_1_2021","LAR_2_2021","LAR_3_2021","LAR_4_2021","LAR_5_2021","LAR_6_2021","LAR_7_2021","LAR_8_2021","LAR_9_2021","LAR_10_2021"),
names_to='census',
values_to='LAR')
LAR_data$census[LAR_data$census == "LAR_1_2021"] <- "1"
LAR_data$census[LAR_data$census == "LAR_2_2021"] <- "2"
LAR_data$census[LAR_data$census == "LAR_3_2021"] <-"3"
LAR_data$census[LAR_data$census == "LAR_4_2021"] <- "4"
LAR_data$census[LAR_data$census == "LAR_5_2021"] <- "5"
LAR_data$census[LAR_data$census == "LAR_6_2021"] <- "6"
LAR_data$census[LAR_data$census == "LAR_7_2021"] <- "7"
LAR_data$census[LAR_data$census == "LAR_8_2021"] <- "8"
LAR_data$census[LAR_data$census == "LAR_9_2021"] <- "9"
LAR_data$census[LAR_data$census == "LAR_10_2021"] <- "10"
LAR_data $census <-as.factor(LAR_data $census)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")+ facet_grid(census ~  .)
LAR_data <- drop_na(LAR_data,LAR_prop)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment+ random(census) + random(PlantID)+ random(Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
##Some  variables are being read as characters not factors. Let's fix that
estess $Block <-factor(estess $Block)
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
#####repeated measures with all damage data####
LARdat<-estess[,c(1:10,49:58)]
LAR_data<- LARdat %>% pivot_longer(cols=c("LAR_1_2021","LAR_2_2021","LAR_3_2021","LAR_4_2021","LAR_5_2021","LAR_6_2021","LAR_7_2021","LAR_8_2021","LAR_9_2021","LAR_10_2021"),
names_to='census',
values_to='LAR')
LAR_data$census[LAR_data$census == "LAR_1_2021"] <- "1"
LAR_data$census[LAR_data$census == "LAR_2_2021"] <- "2"
LAR_data$census[LAR_data$census == "LAR_3_2021"] <-"3"
LAR_data$census[LAR_data$census == "LAR_4_2021"] <- "4"
LAR_data$census[LAR_data$census == "LAR_5_2021"] <- "5"
LAR_data$census[LAR_data$census == "LAR_6_2021"] <- "6"
LAR_data$census[LAR_data$census == "LAR_7_2021"] <- "7"
LAR_data$census[LAR_data$census == "LAR_8_2021"] <- "8"
LAR_data$census[LAR_data$census == "LAR_9_2021"] <- "9"
LAR_data$census[LAR_data$census == "LAR_10_2021"] <- "10"
LAR_data $census <-as.factor(LAR_data $census)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")+ facet_grid(census ~  .)
LAR_data <- drop_na(LAR_data,LAR_prop)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment+ random(census) + random(PlantID)+ random(Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
summary(mod_LAR)
pred_lar <- ggpredict(mod_LAR, terms = c("S_elev[all]", "Treatment"), type = "re", interval="confidence")
lar_plot <-plot(pred_lar, show_residuals=TRUE, show_title =FALSE, show_legend=TRUE, colors = cols, facet=TRUE)+theme(text = element_text(size=10),axis.title.x=element_blank(),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank())+theme(legend.position="right")+scale_x_continuous("Source elevation (km)")+ scale_y_continuous("LAR")
lar_plot
mod_LAR_no_interact<- gamlss (formula= y_beta ~Treatment+S_elev+ random(census) + random(PlantID)+ random(Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
drop1(mod_LAR_no_interact)
newdf2 <- LAR_data %>%
mutate(fit.m = predict(mod_LAR, se.fit=FALSE),
resid = residuals(mod_LAR))
##Convert coefficients to probabilities
newdf2 $predicted<-1/(1+exp(-(newdf2 $fit.m)))
newdf2 $resid_trans<-1/(1+exp(-(newdf2 $resid)))
##Box plot
LAR_box <-ggplot(LAR_data, aes(x = Treatment, y = LAR_prop, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivore treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, position = position_jitterdodge(0.3))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))
damage_treatment
#cline, plotting predicted data
damage_cline= ggplot(newdf2, aes(x= S_elev,y= predicted, group= Treatment,
colour= Treatment))+geom_point(pch = 20, size = 1) + scale_y_continuous("Leaf area removed by herbivores (proportion)")+ scale_x_continuous("Source elevation")   + theme_classic() + #facet_grid(~ garden) +
theme(axis.title.y = element_text(size=10, colour = "black")) +theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),panel.grid.minor=element_blank(),legend.position = "Top")+geom_smooth(method = "glm", method.args = list(family = "quasibinomial"),  se = FALSE) +scale_colour_manual(values = cols, name = "Herbivore availability", labels = c("Pesticide","Control"))
damage_cline #fig 2
field_R= ggplot(estess, aes(x= elev_km,y= Season_survival_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_elev*Treatment+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
simulationOutput <- simulateResiduals(fittedModel= mod_survR_LA, plot = T, re.form = NULL,allow.new.levels =T)
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+(1|PlantID)+(1|Block),data=estess,family=binomial(link="logit"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+(1|PlantID)+(1|Genotype),data=estess,family=binomial(link="logit"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
Anova(mod_survR_LA,type="III")
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
#####repeated measures with all damage data####
LARdat<-estess[,c(1:10,49:58)]
LAR_data<- LARdat %>% pivot_longer(cols=c("LAR_1_2021","LAR_2_2021","LAR_3_2021","LAR_4_2021","LAR_5_2021","LAR_6_2021","LAR_7_2021","LAR_8_2021","LAR_9_2021","LAR_10_2021"),
names_to='census',
values_to='LAR')
LAR_data$census[LAR_data$census == "LAR_1_2021"] <- "1"
LAR_data$census[LAR_data$census == "LAR_2_2021"] <- "2"
LAR_data$census[LAR_data$census == "LAR_3_2021"] <-"3"
LAR_data$census[LAR_data$census == "LAR_4_2021"] <- "4"
LAR_data$census[LAR_data$census == "LAR_5_2021"] <- "5"
LAR_data$census[LAR_data$census == "LAR_6_2021"] <- "6"
LAR_data$census[LAR_data$census == "LAR_7_2021"] <- "7"
LAR_data$census[LAR_data$census == "LAR_8_2021"] <- "8"
LAR_data$census[LAR_data$census == "LAR_9_2021"] <- "9"
LAR_data$census[LAR_data$census == "LAR_10_2021"] <- "10"
LAR_data $census <-as.factor(LAR_data $census)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")+ facet_grid(census ~  .)
LAR_data <- drop_na(LAR_data,LAR_prop)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment+ random(census) + random(PlantID)+ random(Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
summary(mod_LAR)
plot(mod_LAR)
pred_lar <- ggpredict(mod_LAR, terms = c("S_elev[all]", "Treatment"), type = "re", interval="confidence")
lar_plot <-plot(pred_lar, show_residuals=TRUE, show_title =FALSE, show_legend=TRUE, colors = cols, facet=TRUE)+theme(text = element_text(size=10),axis.title.x=element_blank(),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank())+theme(legend.position="right")+scale_x_continuous("Source elevation (km)")+ scale_y_continuous("LAR")
lar_plot
##Box plot
LAR_box <-ggplot(LAR_data, aes(x = Treatment, y = LAR_prop, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivore treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, position = position_jitterdodge(0.3))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))
damage_treatment
#cline, plotting predicted data
damage_cline= ggplot(newdf2, aes(x= S_elev,y= predicted, group= Treatment,
colour= Treatment))+geom_point(pch = 20, size = 1) + scale_y_continuous("Leaf area removed by herbivores (proportion)")+ scale_x_continuous("Source elevation")   + theme_classic() + #facet_grid(~ garden) +
theme(axis.title.y = element_text(size=10, colour = "black")) +theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),panel.grid.minor=element_blank(),legend.position = "Top")+geom_smooth(method = "glm", method.args = list(family = "quasibinomial"),  se = FALSE) +scale_colour_manual(values = cols, name = "Herbivore availability", labels = c("Pesticide","Control"))
damage_cline #fig 2
mod_LAR_no_interact<- gamlss (formula= y_beta ~Treatment+S_elev+ random(census) + random(PlantID)+ random(Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
drop1(mod_LAR_no_interact)
summary(mod_LAR_no_interact)
setwd("/Users/inam/Library/CloudStorage/OneDrive-UniversityofGeorgia/Inam_experiments/Herbivory_data/field")
#read in data
estess <- read.csv("estess2021_wide.csv", stringsAsFactors = TRUE)
sapply(estess,class)
##Some  variables are being read as characters not factors. Let's fix that
estess $Block <-factor(estess $Block)
estess <- filter(estess, Exclude_2021 == "include")
#read in data
estess <- read.csv("estess2021_wide.csv", stringsAsFactors = TRUE)
sapply(estess,class)
##Some  variables are being read as characters not factors. Let's fix that
estess $Block <-factor(estess $Block)
estess <- filter(estess, Exclude_2021 == "include")
View(estess)
Exclude_2021
estess <- filter(estess, Exclude_2021 == "include")
estess
estess <- filter(estess, Exclude_2021 == "include")
require(lme4) #for running linear mixed models
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for plotting
require(glmmTMB) # for running survival model, have to load twice
require(gamlss) # for running phenology model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
require(DHARMa)
estess <- filter(estess, Exclude_2021 == "include")
##Change the baseline for pesticide treatment
estess $Treatment <-factor(estess $Treatment, levels = c("Control", "Pesticide"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
estess $S_elev<-scale(estess $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
estess $S_initdiam<-scale(estess $initial_size,center=TRUE, scale=TRUE)
#This rescales source elevation from meters to km
estess$elev_km<-estess $elevation/1000
#Subsetting data for plants that flowered
repro <- filter(estess, Flowered_2021 == 1) #only plants that flowered
cols=c("#882255","#6699cc")
field_R= ggplot(estess, aes(x= elev_km,y= Season_survival_2021, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~poly(x,2)) +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
mod_survR_LA <-glmmTMB(Season_survival_2021~ S_initdiam+S_elev*Treatment+(1|PlantID)+(1|Block)+(1|Genotype),data=estess,family=binomial(link="logit"))
Anova(mod_survR_LA,type="III")
simulationOutput <- simulateResiduals(fittedModel= mod_survR_LA, plot = T, re.form = NULL,allow.new.levels =T)
surv_prob <- ggpredict(mod_survR_LA, terms = c("S_elev[all]","Treatment"), type = "re", interval="confidence")
surv_plot <-plot(surv_prob, show_data=TRUE, show_title =FALSE, show_legend=TRUE, facet=FALSE,jitter=0.025)+theme(text = element_text(size=10),axis.ticks = element_line(colour = "black"),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position="right")+ scale_y_continuous("Probability of survival")+scale_x_continuous("Elevation")
surv_plot
##Box plot
surv_box <-ggplot(mod_survR_LA, aes(x = Treatment, y = Season_survival_2021, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivore treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, position = position_jitterdodge(0.3))
damage_treatment<-surv_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))
##Box plot
surv_box <-ggplot(estess, aes(x = Treatment, y = Season_survival_2021, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Herbivore treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, position = position_jitterdodge(0.3))
damage_treatment<-surv_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))
damage_treatment
##Box plot
surv_box <-ggplot(estess, aes(x = Treatment, y = Season_survival_2021, fill = Treatment)) +
geom_vioplot(outlier.shape = NA) +xlab("Herbivore treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(pch = 21, position = position_jitterdodge(0.3))
surv_means<-emmeans(mod_survR_LA, ~ Treatment, type="response", adjust = "sidak")
cld(surv_means, details=TRUE)
##Box plot
##Box plot
surv_violin <-ggplot(estess, aes(x = Treatment, y = Season_survival_2021, fill = Treatment)) +
geom_violin() +xlab("Water availibility")+
stat_summary(fun.data = "mean_cl_normal")+
scale_y_continuous("Probability of survival") +
geom_point(pch = 21, position = position_jitterdodge())
surv_treatment<-surv_violin + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))
surv_treatment
##Box plot
##Box plot
surv_violin <-ggplot(estess, aes(x = Treatment, y = Season_survival_2021, fill = Treatment)) +
geom_violin() +xlab("Herbivore treatment")+
stat_summary(fun.data = "mean_cl_normal")+
scale_y_continuous("Probability of survival") +
geom_point(pch = 21, position = position_jitterdodge())
surv_treatment<-surv_violin + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols))
surv_treatment
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
#####repeated measures with all damage data####
LARdat<-estess[,c(1:10,49:58)]
LAR_data<- LARdat %>% pivot_longer(cols=c("LAR_1_2021","LAR_2_2021","LAR_3_2021","LAR_4_2021","LAR_5_2021","LAR_6_2021","LAR_7_2021","LAR_8_2021","LAR_9_2021","LAR_10_2021"),
names_to='census',
values_to='LAR')
LAR_data$census[LAR_data$census == "LAR_1_2021"] <- "1"
LAR_data$census[LAR_data$census == "LAR_2_2021"] <- "2"
LAR_data$census[LAR_data$census == "LAR_3_2021"] <-"3"
LAR_data$census[LAR_data$census == "LAR_4_2021"] <- "4"
LAR_data$census[LAR_data$census == "LAR_5_2021"] <- "5"
LAR_data$census[LAR_data$census == "LAR_6_2021"] <- "6"
LAR_data$census[LAR_data$census == "LAR_7_2021"] <- "7"
LAR_data$census[LAR_data$census == "LAR_8_2021"] <- "8"
LAR_data$census[LAR_data$census == "LAR_9_2021"] <- "9"
LAR_data$census[LAR_data$census == "LAR_10_2021"] <- "10"
LAR_data $census <-as.factor(LAR_data $census)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")+ facet_grid(census ~  .)
LAR_data <- drop_na(LAR_data,LAR_prop)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
newdf2 <- LAR_data %>%
mutate(fit.m = predict(mod_LAR, se.fit=FALSE),
resid = residuals(mod_LAR))
##Convert coefficients to probabilities
newdf2 $predicted<-1/(1+exp(-(newdf2 $fit.m)))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))
#cline, plotting predicted data
damage_cline= ggplot(newdf2, aes(x= S_elev,y= predicted, group= Treatment,
colour= Treatment))+geom_point(pch = 20, size = 1) + scale_y_continuous("Leaf area removed by herbivores (proportion)")+ scale_x_continuous("Source elevation")   + theme_classic() + #facet_grid(~ garden) +
theme(axis.title.y = element_text(size=10, colour = "black")) +theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),panel.grid.minor=element_blank(),legend.position = "Top")+geom_smooth(method = "glm", method.args = list(family = "quasibinomial"),  se = FALSE) +scale_colour_manual(values = cols, name = "Herbivore availability", labels = c("Pesticide","Control"))
damage_cline #fig 2
Anova(mod_survR_LA,type="III")
cld(surv_means, details=TRUE)
##Box plot
##Box plot
surv_violin <-ggplot(estess, aes(x = Treatment, y = Season_survival_2021, fill = Treatment)) +
geom_violin() +xlab("Herbivore treatment")+
stat_summary(fun.data = "mean_cl_normal")+
scale_y_continuous("Probability of survival") +
geom_point(pch = 21, position = position_jitterdodge())
surv_treatment<-surv_violin + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols))
surv_treatment
simulationOutput <- simulateResiduals(fittedModel= mod_survR_LA, plot = T, re.form = NULL,allow.new.levels =T)
LAR_means<-emmeans(mod_LAR_no_interact, ~ Treatment, type="response", adjust = "sidak")
