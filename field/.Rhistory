# remove objects and clear workspace
rm(list = ls(all=TRUE))
#require packages
require(lme4) #for running linear mixed models
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for plotting
require(glmmTMB) # for running survival model, have to load twice
require(gamlss) # for running phenology model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
setwd("/Users/inam/Library/CloudStorage/OneDrive-UniversityofGeorgia/Inam_experiments/Herbivory_data/field")
#read in data
field <- read.csv("field_summary_long.csv", stringsAsFactors = TRUE)
sapply(field,class)
field $cohort <-as.factor(field $cohort)
#Let's concatenate garden and block
field $Garden_Block<-interaction(field$garden, field$block,sep = "_")
#Let's concatenate garden and treatment
field $treat<-interaction(field$garden, field$Treatment,sep = "_")
#convert elevation distance (source population elevation - garden elevation) to km
field$elev_dist_km<-field$elev_dist/1000
hist(field$elev_dist_km)
#This standardizes elevation distance to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
field $S_elev_dist<-scale(field $elev_dist,center=TRUE, scale=TRUE)
##Change the baseline for pesticide treatment
field $Treatment <-factor(field $Treatment, levels = c("Control", "Pesticide"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
field $S_elev<-scale(field $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
field $S_initdiam<-scale(field $initial_size,center=TRUE, scale=TRUE)
#This makes number of year as factor
field $Year <-as.factor(field $Year)
#This rescales source elevation from meters to km
field$elev_km<-field $elevation/1000
field <- filter(field, Exclude == "Include")
#Subsetting data for plants that reproduced (had siliques)
repro <- filter(field, Reproduction == 1) #only plants that reproduced
hurdle_Model <- glmmTMB(Mature_length_siliques ~Treatment*elev_dist_km*garden+Year+cohort+(1|PlantID) + (1| Garden_Block)+(1|Genotype), data=field, zi=~Treatment * elev_dist_km*garden+Year+cohort+(1|PlantID) + (1| Garden_Block)+(1|Genotype),family=ziGamma(link="log"))
##This is the ANOVA table for the logistic regression part (probability of reproduction).
Anova(hurdle_Model,type="III", component="zi")
##This is the ANOVA table for the count part (fecundity amongst individuals that reproduced).
Anova(hurdle_Model,type="III", component="cond")
library(ggeffects)
result <- ggpredict(hurdle_Model, c("elev_dist_km","Treatment"))
simulationOutput <- simulateResiduals(fittedModel= hurdle_Model, plot = T, re.form = NULL,allow.new.levels =T)
require(DHARMa)
simulationOutput <- simulateResiduals(fittedModel= hurdle_Model, plot = T, re.form = NULL,allow.new.levels =T)
##This is the ANOVA table for the logistic regression part (probability of reproduction).
Anova(hurdle_Model,type="III", component="zi")
##This is the ANOVA table for the count part (fecundity amongst individuals that reproduced).
Anova(hurdle_Model,type="III", component="cond")
result <- ggpredict(hurdle_Model, c("elev_dist_km","Treatment"))
plot(result, show_residuals=TRUE,)
result <- ggpredict(hurdle_Model, c("elev_dist_km","Treatment","garden"))
plot(result,show_residuals=TRUE,jitter = FALSE)
coefficients_fec <- emtrends(hurdle_Model, specs = c("treatment"), var = "elev_dist_km",type="response")
coefficients_fec <- emtrends(hurdle_Model, specs = c("Treatment"), var = "elev_dist_km",type="response")
fec_table<- as.data.frame(summary(coefficients_fec))[c('Treatment','elev_dist_km.trend', 'SE')]
fec_table <- fec_table%>% mutate(
slopes = exp(S_elev.trend),
Lower95 = slopes * exp(-1.96*SE),
Upper95 = slopes * exp(1.96*SE))
fec_table <- fec_table%>% mutate(
slopes = exp(elev_dist_km.trend),
Lower95 = slopes * exp(-1.96*SE),
Upper95 = slopes * exp(1.96*SE))
fec_table
fec_table<- as.data.frame(summary(coefficients_fec))[c('Treatment',"garden",'elev_dist_km.trend', 'SE')]
coefficients_fec <- emtrends(hurdle_Model, specs = c("Treatment","garden"), var = "elev_dist_km",type="response")
fec_table<- as.data.frame(summary(coefficients_fec))[c('Treatment',"garden",'elev_dist_km.trend', 'SE')]
fec_table <- fec_table%>% mutate(
slopes = exp(elev_dist_km.trend),
Lower95 = slopes * exp(-1.96*SE),
Upper95 = slopes * exp(1.96*SE))
fec_table
pred_fec <- ggpredict(fecundity, terms = c("S_elev[all]","Treatment"), type = "re", interval="confidence")
Local_adaptation <-plot(pred_fec, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,2000)
pred_fec <- ggpredict(hurdle_Model, terms = c("S_elev[all]","Treatment"), type = "re", interval="confidence")
Local_adaptation <-plot(pred_fec, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,2000)
pred_fec <- ggpredict(hurdle_Model, terms = c("elev_dist_km[all]","Treatment"), type = "re", interval="confidence")
Local_adaptation <-plot(pred_fec, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,2000)
cols=c("#CC79A7","lightblue")
Local_adaptation <-plot(pred_fec, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,2000)
Local_adaptation
Local_adaptation <-plot(pred_fec, show_data=TRUE, show_title =FALSE, show_legend=FALSE, colors = cols, facet=FALSE)+theme_classic()+theme(legend.position="right")+scale_x_continuous("Source elevation (m)")+ scale_y_continuous("Fecundity (length of mature siliques)")+ ylim(0,1000)
Local_adaptation
field_R= ggplot(field, aes(x= elev_km,y= Reproduction, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Probability of reproduction")+ scale_x_continuous("Source Elevation")
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ garden, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~poly(x,2))+facet_wrap(~ garden, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
mod_repro <-glmmTMB(Reproduction~ elev_km*Treatment*garden+Year+cohort+(1|PlantID)+(1|Garden_Block)+(1|Genotype),data=field,family=binomial(link="logit"))
Anova(mod_repro, type="III")
visreg(mod_repro, "Year", type="conditional", scale = "response",
xlab="Year", ylab="Probability of Reproduction", partial=TRUE,
fill=list(col="light grey"
#(c(0.99), alpha=0)
), band = FALSE,
#line=list(col=grey(c(0.2,0.6))),
points=list(cex=0.65,  pch=(19)))
repro <- filter(field, Reproduction == 1) #only plants that reproduced
field_f= ggplot(repro, aes(x= elev_km,y= Mature_length_siliques, group= Treatment,
colour= Treatment))+geom_point(size=5) + scale_y_continuous("Mature Length Siliques")+ scale_x_continuous("Source Elevation")
field_f + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~x)+facet_wrap(~ garden, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_f + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+geom_smooth(method="glm",size=1.6, formula=y~poly(x,2))+facet_wrap(~ garden, scales="free_x") +scale_colour_manual(values = c( "#6699cc","#882255"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
field_R_box<-ggplot(repro, aes(x = garden, y = Mature_length_siliques, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Garden")+ scale_y_continuous("Mature length siliques") +
geom_point(pch = 21, position = position_jitterdodge())
field_R_box + theme_bw() + theme(text = element_text(size=20),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "top")+ scale_x_discrete(labels=c("Gothic", "Schofield")) +  scale_fill_manual(values = c( "lightblue","darkred"), name = "Herbivore treatment", labels = c("Control","Pesticide"))
#length siliques
mod_repro_f <- glmmTMB(Mature_length_siliques ~elev_dist_km*Treatment*garden+Year+cohort+(1|PlantID) + (1| Garden_Block)+(1|Genotype), data=repro,family=ziGamma(link="log"))
Anova(mod_repro_f, type="III")
plot(predictorEffects(mod_repro_f, ~ elev_dist_km), type="response",partial.residuals=FALSE, confint=list(style="auto"), xlab="Population source elevation (Km)", ylab="Fecundity",line=list(multiline=TRUE, lty=1:2,col=c("#6699cc","#882255")))
coefficients_fec <- emtrends(mod_repro_f, specs = c("Treatment"), var = "elev_dist_km",type="response")
fec_table<- as.data.frame(summary(coefficients_fec))[c('Treatment','elev_dist_km.trend', 'SE')]
fec_table <- fec_table%>% mutate(
slopes = exp(elev_dist_km.trend),
Lower95 = slopes * exp(-1.96*SE),
Upper95 = slopes * exp(1.96*SE))
fec_table
plot(predictorEffects(mod_repro_f, ~ elev_dist_km), type="response",partial.residuals=FALSE, confint=list(style="auto"), xlab="Population source elevation (Km)", ylab="Fecundity",line=list(multiline=TRUE, lty=1:2,col=c(cols)))
coefficients_fec <- emtrends(mod_repro_f, specs = c("Treatment"), var = "elev_dist_km",type="response")
fec_table<- as.data.frame(summary(coefficients_fec))[c('Treatment','elev_dist_km.trend', 'SE')]
fec_table <- fec_table%>% mutate(
slopes = exp(elev_dist_km.trend),
Lower95 = slopes * exp(-1.96*SE),
Upper95 = slopes * exp(1.96*SE))
fec_table<- as.data.frame(summary(coefficients_fec))[c('garden','elev_dist_km.trend', 'SE')]
coefficients_fec <- emtrends(mod_repro_f, specs = c("garden"), var = "elev_dist_km",type="response")
fec_table<- as.data.frame(summary(coefficients_fec))[c('garden','elev_dist_km.trend', 'SE')]
fec_table <- fec_table%>% mutate(
slopes = exp(elev_dist_km.trend),
Lower95 = slopes * exp(-1.96*SE),
Upper95 = slopes * exp(1.96*SE))
fec_table
result <- ggpredict(mod_repro_f, c("elev_dist_km","garden"))
plot(result, show_residuals=TRUE,)
