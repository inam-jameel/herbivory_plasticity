+Water*Herbivore*I(S_elev^2)
+(1|PlantID)+(1|Cage_Block)+(1|Genotype), data= grasshopperFT,
zi=~S_initdiam+year
+Water*Herbivore*S_elev
+Water*Herbivore*I(S_elev^2)
+(1|PlantID)+ (1| Cage_Block)+(1|Genotype),family=ziGamma(link="log"))
emtrends(hurdle_Model_LA, specs = c("Water"), var = "S_elev",component="cond")
flowering_time_cline<-visregList(visreg(FT_model,"S_elev", by="Water",cond=list("Herbivore"="Addition"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response"),
visreg(FT_model,"S_elev", by="Water",cond=list("Herbivore"="Removal"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response"), collapse=TRUE)
simulationOutput <- simulateResiduals(fittedModel= FT_model, plot = T, re.form = NULL,allow.new.levels =TRUE)
RM_fit <- subset(grasshopperFT, Mature_length_siliques>0) # for plotting from count part, excludes plants that did not reproduce
##Extract the coefficients using emtrends, which requires defining the quadratic effect prior to running the model
RM_fit $Selev2<-RM_fit $S_elev* RM_fit $S_elev
hurdle_Model_LA_quad <- glmmTMB(Mature_length_siliques ~ S_initdiam+year
+Water*Herbivore*S_elev
+Water*Herbivore*Selev2
+(1|PlantID)+(1|Cage_Block)+(1|Genotype), data= RM_fit,
zi=~S_initdiam+year
+Water*Herbivore*S_elev
+Water*Herbivore*Selev2
+(1|PlantID)+ (1| Cage_Block)+(1|Genotype),family=ziGamma(link="log"))
pred_hurdle <- ggpredict(hurdle_Model_LA, terms = c("S_elev[all]", "Water"), type = "random", interval="confidence")
hurdle_plot <-plot(pred_hurdle, show_data=TRUE, show_title =FALSE, show_legend=TRUE, colors = cols, facet=TRUE)+theme(text = element_text(size=10),axis.title.x=element_blank(),axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank())+theme(legend.position="right")+scale_x_continuous("Source elevation (km)")+ scale_y_continuous("Fecundity")+ylim(0,2000)
hurdle_plot
##Figure 5
fec_clinal_variation_water
fecundity_cline_water<-visreg(hurdle_Model_LA,"S_elev", by="Water", overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response")
fec_clinal_variation_water<-ggplot(fecundity_cline_water $fit, aes(S_elev, visregFit,group= Water, colour= Water, fill=factor(Water))) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr), alpha=0.15, linetype=0) +geom_line(aes(group=Water)) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= RM_fit, aes(S_elev, Mature_length_siliques, color= Water, shape=Water), alpha=0.75, color="black")+scale_shape_manual(values=c(21,24))+scale_linetype_manual(values=c("dashed","solid"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.564114,-0.1030306,1.358053))+ scale_y_continuous("Fecundity (length of longest fruit)",limits=c(0,2500))+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+facet_wrap(~Water)
##Figure 5
fec_clinal_variation_water
Fig2<-ggarrange(damage_cline, damage_treatment,LAR_fecund_plot,
labels = c("A", "B","C"),
ncol = 3, nrow = 1)
Fig2
Figure2 <- ggarrange(damage_clinal_variation,
LAR_box,LAR_fecund_plot,
labels = c("A", "B","C"),
ncol = 3, nrow = 1, common.legend = TRUE, legend="right")
Figure2
LAR_data_long_form<- grasshopper %>% pivot_longer(cols=c("LAR_1","LAR_2","LAR_3"),
names_to='census',
values_to='LAR')
LAR_data_long_form <- dplyr::select(LAR_data_long_form, LAR, elevation, Genotype, population, Cage, Water, Herbivore, Block, PlantID, init.diam, S_initdiam, Cage_Block, elev_km, S_elev, treat,census, year)
LAR_data_long_form$census[LAR_data_long_form$census == "LAR_1"] <- "1"
LAR_data_long_form<- grasshopper %>% pivot_longer(cols=c("LAR_1","LAR_2","LAR_3"),
names_to='census',
values_to='LAR')
LAR_data_long_form <- dplyr::select(LAR_data_long_form, LAR, elevation, Genotype, population, Cage, Water, Herbivore, Block, PlantID, init.diam, S_initdiam, Cage_Block, elev_km, S_elev, treat,census, year)
LAR_data_long_form <- dplyr::select(LAR_data_long_form, LAR, elevation, Genotype, population, Cage, Water, Herbivore, Block, PlantID, init.diam, S_initdiam, Cage_Block, elev_km, S_elev,census, year)
LAR_data_long_form$census[LAR_data_long_form$census == "LAR_1"] <- "1"
LAR_data_long_form$census[LAR_data_long_form$census == "LAR_2"] <- "2"
LAR_data_long_form$census[LAR_data_long_form$census == "LAR_3"] <-"3"
LAR_data_long_form $census <-as.factor(LAR_data_long_form $census)
LAR_data_long_form $year <-as.factor(LAR_data_long_form $year)
#Let's concatenate census and year
LAR_data_long_form $census_year<-interaction(LAR_data_long_form$census, LAR_data_long_form$year,sep = "_")
LAR_data_long_form$LAR_prop<-LAR_data_long_form $LAR/100
hist(LAR_data_long_form$LAR_prop)
LAR_data_long_form <- drop_na(LAR_data_long_form,LAR_prop)
n<-nrow(LAR_data_long_form)
LAR_data_long_form $y_beta<- (LAR_data_long_form $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data_long_form $y_beta)
min(LAR_data_long_form $y_beta)
max(LAR_data_long_form $y_beta)
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*Water*Herbivore*year+ random(census_year) + random(PlantID)+ random(Cage_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data_long_form,control = gamlss.control(n.cyc = 500))
newdf2 <- LAR_data_long_form %>%
mutate(fit.m = predict(LAR_Model, se.fit=FALSE),
resid = residuals(LAR_Model))
##Convert coefficients to probabilities
newdf2 $predicted<-1/(1+exp(-(newdf2 $fit.m)))
newdf2 $resid_trans<-1/(1+exp(-(newdf2 $resid)))
damage_cline<-visregList(visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Addition",year="2021"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE), visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Removal",year="2021"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE), visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Addition",year="2022"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Removal",year="2022"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Addition",year="2023"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE), visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Removal",year="2023"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),collapse=TRUE)
head(damage_cline$fit)
damfit<-data.frame(damage_cline$fit)
damage_clinal_variation<-ggplot(damfit, aes(S_elev, visregFITexp,group= Water, colour= Water, fill=factor(Water))) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= LAR_data_long_form, aes(S_elev, LAR_prop, color= Water, shape=Water), alpha=0.50, color="black")+scale_shape_manual(values=c(21,24), name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.557947,-0.1085093, 1.340929))+ scale_y_continuous("Leaf area removed by herbivores (proportion)")+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+ geom_line(aes(group=Water),size=1)+scale_linetype_manual(values=c("solid", "dotted"))+facet_grid(Herbivore~year)
damage_clinal_variation
damfit$visregFITexp<-exp(damfit$visregFit)
damage_clinal_variation<-ggplot(damfit, aes(S_elev, visregFITexp,group= Water, colour= Water, fill=factor(Water))) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= LAR_data_long_form, aes(S_elev, LAR_prop, color= Water, shape=Water), alpha=0.50, color="black")+scale_shape_manual(values=c(21,24), name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.557947,-0.1085093, 1.340929))+ scale_y_continuous("Leaf area removed by herbivores (proportion)")+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+ geom_line(aes(group=Water),size=1)+scale_linetype_manual(values=c("solid", "dotted"))+facet_grid(Herbivore~year)
damage_clinal_variation
##Box_plot
LAR_box <-ggplot(LAR_data_long_form, aes(x = Herbivore, y = LAR_prop, fill = Water,shape=Water)) +geom_boxplot(outlier.shape = NA) +xlab("Grasshopper treatment")+ scale_y_continuous("Leaf area removed by herbivores (proportion)") +geom_point(aes(shape=factor(Water)), size = 1,position = position_jitterdodge(0.3))
LAR_box <-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(),
panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete(labels=c("grasshopper addition", "grasshopper removal")) +  scale_fill_manual(values = c("#CC79A7","lightblue"), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+scale_shape_manual(values=c(21,24), name = "Water treatment", labels = c("Water-restricted","Supplemental watering"))+facet_grid(~year)
LAR_box
Fig2 <- ggarrange(
damage_clinal_variation,
LAR_box,LAR_fecund_plot,
labels = c("A", "B"),
ncol = 1, nrow = 3, common.legend = TRUE, legend="right")
Fig2
Figure2 <- ggarrange(damage_clinal_variation,
LAR_box,LAR_fecund_plot,
labels = c("A", "B","C"),
ncol = 3, nrow = 1, common.legend = TRUE, legend="right")
Figure2
figure3 <- ggarrange(
SLA_clinal_variation, SLA_treatment, sla_repro_plot, SLA_fecund_plot,succ_clinal_variation, Suc_treatment, suc_repro_plot, SUC_fecund_plot ,
labels = c("A", "B", "C", "D", "E", "F", "G", "H"),
ncol = 4, nrow = 2)
figure3
figure4 <- ggarrange(
phen_cline,
FT_treatment,
FT_fecund_plot,
Duration_cline,
Duration_treatment,
duration_fecund_plot,
height_cline,
height_treatment,
height_fecund_plot,
labels = c("A", "B", "C","D", "E", "F","G", "H", "I"),
ncol = 3, nrow = 3)
# cline plot
floweringduration_cline<-visregList(visreg(flowering_duration,"S_elev", by="Water",cond=list("Herbivore"="Addition"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response"),
visreg(flowering_duration,"S_elev", by="Water",cond=list("Herbivore"="Removal"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response"), collapse=TRUE)
Fduration_clinal_variation<-ggplot(floweringduration_cline $fit, aes(S_elev, visregFit,group= Water, colour= Water, fill=factor(Water))) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= flowering, aes(S_elev, flowering_duration, color= Water, shape=Water), alpha=0.75, color="black")+scale_shape_manual(values=c(21,24))+scale_linetype_manual(values=c("dashed","solid"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.630394,-0.1998366,  1.23072))+ scale_y_continuous("Flowering duration (days)")+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+facet_wrap(~Herbivore)
Fduration_clinal_variation
Duration_cline #no significant interaction
Duration_cline<-ggplot(floweringduration_cline $fit, aes(S_elev, visregFit,group= Water, colour= Water, fill=factor(Water))) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= flowering, aes(S_elev, flowering_duration, color= Water, shape=Water), alpha=0.75, color="black")+scale_shape_manual(values=c(21,24))+scale_linetype_manual(values=c("dashed","solid"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.630394,-0.1998366,  1.23072))+ scale_y_continuous("Flowering duration (days)")+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+facet_wrap(~Herbivore)
Duration_cline
Duration_cline #no significant interaction
figure4 <- ggarrange(
phen_cline,
FT_treatment,
FT_fecund_plot,
Duration_cline,
Duration_treatment,
duration_fecund_plot,
height_cline,
height_treatment,
height_fecund_plot,
labels = c("A", "B", "C","D", "E", "F","G", "H", "I"),
ncol = 3, nrow = 3)
figure4
#cline plot
height_cline<-visregList(visreg(max_height,"S_elev", by="Water",cond=list("Herbivore"="Addition"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response"),
visreg(max_height,"S_elev", by="Water",cond=list("Herbivore"="Removal"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response"), collapse=TRUE)
height_clinal_variation<-ggplot(height_cline $fit, aes(S_elev, visregFit,group= Water, colour= Water, fill=factor(Water))) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr), alpha=0.15, linetype=0) +geom_line(aes(group=Water)) +theme_bw()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= flowering, aes(S_elev, flowering_duration, color= Water, shape=Water), alpha=0.75, color="black")+scale_shape_manual(values=c(21,24))+scale_linetype_manual(values=c("dashed","solid"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.630394,-0.1998366,  1.23072))+ scale_y_continuous("Height of tallest stem at flowering")+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+facet_wrap(~Herbivore)
height_clinal_variation
figure4 <- ggarrange(
phen_cline,
FT_treatment,
FT_fecund_plot,
Duration_cline,
Duration_treatment,
duration_fecund_plot,
height_clinal_variation,
height_treatment,
height_fecund_plot,
labels = c("A", "B", "C","D", "E", "F","G", "H", "I"),
ncol = 3, nrow = 3)
figure4
library(ggpubr)
figure4 <- ggarrange(
phen_cline,
FT_treatment,
FT_fecund_plot,
Fduration_clinal_variation,
Duration_treatment,
duration_fecund_plot,
height_clinal_variation,
height_treatment,
height_fecund_plot,
labels = c("A", "B", "C","D", "E", "F","G", "H", "I"),
ncol = 3, nrow = 3)
figure4
height_clinal_variation<-ggplot(height_cline $fit, aes(S_elev, visregFit,group= Water, colour= Water, fill=factor(Water))) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr), alpha=0.15, linetype=0) +geom_line(aes(group=Water)) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= flowering, aes(S_elev, flowering_duration, color= Water, shape=Water), alpha=0.75, color="black")+scale_shape_manual(values=c(21,24))+scale_linetype_manual(values=c("dashed","solid"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.630394,-0.1998366,  1.23072))+ scale_y_continuous("Height of tallest stem at flowering")+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+facet_wrap(~Herbivore)
height_clinal_variation
figure4 <- ggarrange(
phen_cline,
FT_treatment,
FT_fecund_plot,
Duration_cline,
Duration_treatment,
duration_fecund_plot,
height_clinal_variation,
height_treatment,
height_fecund_plot,
labels = c("A", "B", "C","D", "E", "F","G", "H", "I"),
ncol = 3, nrow = 3)
figure4
figure4 <- ggarrange(
phen_cline,
FT_treatment,
FT_fecund_plot,
Fduration_clinal_variation,
Duration_treatment,
duration_fecund_plot,
height_clinal_variation,
height_treatment,
height_fecund_plot,
labels = c("A", "B", "C","D", "E", "F","G", "H", "I"),
ncol = 3, nrow = 3)
figure4
Local_adaptation<-ggplot(fecundity_cline_water $fit, aes(S_elev, visregFit,group= Water, colour= Water, fill=factor(Water))) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr), alpha=0.15, linetype=0) +geom_line(aes(group=Water)) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= RM_fit, aes(S_elev, Mature_length_siliques, color= Water, shape=Water), alpha=0.75, color="black")+scale_shape_manual(values=c(21,24))+scale_linetype_manual(values=c("dashed","solid"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.564114,-0.1030306,1.358053))+ scale_y_continuous("Fecundity (total fruit length, mm)",limits=c(0,2500))+scale_fill_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols, name = "Water treatment", labels = c("Restricted","Supplemental"))+facet_wrap(~Water)
##Figure 5
Local_adaptation
figure5 <- Local_adaptation
figure5
# remove objects and clear workspace
rm(list = ls(all=TRUE))
#require packages
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for pairwise comparisons
require(glmmTMB) # for running models, have to load twice occasionally
require(gamlss) # for running herbivor damage model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
library(DHARMa) #for assessing model fits
library(ggeffects) #for plotting
library(ggpubr) #for arranging panels into figures
setwd("/Users/inam/Library/CloudStorage/OneDrive-UniversityofGeorgia/Inam_experiments/Herbivory_data/grasshopper/Grasshopper_manuscript_files/Grasshopper_manuscript_31May24/scripts_data/")
#read in data
grasshopper <- read.csv("Common_garden_experiment_data.csv",stringsAsFactors=T)
sapply(grasshopper,class)
##Some  variables are being read as characters not factors. Let's fix that
grasshopper$Block<-as.factor(grasshopper$Block)
grasshopper$Cage<-as.factor(grasshopper$Cage)
grasshopper$year<-as.factor(grasshopper$year)
##Change the baseline for Water availability
grasshopper $Water <-factor(grasshopper $Water, levels = c("Restricted", "Supplemental"))
##Change the baseline for Herbivore manipulation
grasshopper $Herbivore <-factor(grasshopper $Herbivore, levels = c("Addition", "Removal"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
grasshopper $S_elev<-scale(grasshopper $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
grasshopper $S_initdiam<-scale(grasshopper $init.diam,center=TRUE, scale=TRUE)
#This rescales source elevation from meters to km
grasshopper$elev_km<-grasshopper $elevation/1000
#Elevational distance in km
grasshopper$elev_dist_km<-grasshopper $elev_dist/1000
#Adjust flowering time based on final_model in flowering_time_adjustment.R
grasshopper$FT_Adj<-round((grasshopper$Ordinal_Date_flowering - (grasshopper$Silique_length_flowering /2.5901)),0)
plot(grasshopper$FT_Adj~grasshopper$Ordinal_Date_flowering)
grasshopper$Snowmelt_FT_Adj<-grasshopper$FT_Adj-grasshopper$Day_of_snowmelt
plot(grasshopper$Snowmelt_FT_Adj ~grasshopper$Snowmelt_Date_flowering)
hist(grasshopper$Ordinal_Date_flowering)
hist(grasshopper$FT_Adj)
##Correlate rosette and stem leaf data to come up with composite figures
plot(grasshopper$rosette_succulence~grasshopper$bolt_succulence)
plot(grasshopper$rosette_SLA~grasshopper$bolt_SLA)
mod1<-lm(grasshopper$rosette_succulence~grasshopper$bolt_succulence)
summary(mod1)
##read in data
grasshopper <- read.csv("Common_garden_experiment_data.csv",stringsAsFactors=T)
sapply(grasshopper,class)
##Some  variables are being read as characters not factors. Let's fix that
grasshopper$Block<-as.factor(grasshopper$Block)
grasshopper$Cage<-as.factor(grasshopper$Cage)
grasshopper$year<-as.factor(grasshopper$year)
##Change the baseline for Water availability
grasshopper $Water <-factor(grasshopper $Water, levels = c("Restricted", "Supplemental"))
##Change the baseline for Herbivore manipulation
grasshopper $Herbivore <-factor(grasshopper $Herbivore, levels = c("Addition", "Removal"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
grasshopper $S_elev<-scale(grasshopper $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
grasshopper $S_initdiam<-scale(grasshopper $init.diam,center=TRUE, scale=TRUE)
##This rescales source elevation from meters to km
grasshopper$elev_km<-grasshopper $elevation/1000
##Elevational distance in km
grasshopper$elev_dist_km<-grasshopper $elev_dist/1000
##Adjust flowering time based on final_model in flowering_time_adjustment.R
grasshopper$FT_Adj<-round((grasshopper$Ordinal_Date_flowering - (grasshopper$Silique_length_flowering /2.5901)),0)
plot(grasshopper$FT_Adj~grasshopper$Ordinal_Date_flowering)
grasshopper$Snowmelt_FT_Adj<-grasshopper$FT_Adj-grasshopper$Day_of_snowmelt
plot(grasshopper$Snowmelt_FT_Adj ~grasshopper$Snowmelt_Date_flowering)
##Adjust flowering time based on final_model in flowering_time_adjustment.R
grasshopper$FT_Adj<-round((grasshopper$Ordinal_Date_flowering - (grasshopper$Silique_length_flowering /2.5901)),0)
plot(grasshopper$FT_Adj~grasshopper$Ordinal_Date_flowering)
hist(grasshopper$Ordinal_Date_flowering)
hist(grasshopper$FT_Adj)
##Correlate rosette and stem leaf data to come up with composite figures
#plot(grasshopper$rosette_succulence~grasshopper$bolt_succulence)
#plot(grasshopper$rosette_SLA~grasshopper$bolt_SLA)
#mod1<-lm(grasshopper$rosette_succulence~grasshopper$bolt_succulence)
#summary(mod1)
#Anova(mod1,type="III")
#SLA_Mod<-lm(grasshopper$rosette_SLA~grasshopper$bolt_SLA)
#summary(SLA_Mod)
##Create composite leaf SLA and succulence based on the regressions above. This gives us foliar trait data for the 67 plants for which we have stem but not rosette collections
grasshopper$SLA <- ifelse(is.na(grasshopper$rosette_SLA), (71.8177 + 0.7319*grasshopper$bolt_SLA), grasshopper$rosette_SLA)
grasshopper$succulence <- ifelse(is.na(grasshopper$rosette_succulence), (0.0023948 + 0.5609208*grasshopper$bolt_succulence), grasshopper$rosette_succulence)
##This calculates flowering duration
grasshopper$flowering_duration<-(grasshopper $Date_silique - grasshopper $FT_Adj)
##create a dataframe for the vegetative traits
foliar<-subset(grasshopper,SLA>0)
foliar $S_elev<-scale(foliar $elevation,center=TRUE, scale=TRUE)
##set colors
cols=c("#CC79A7","lightblue") #for water treatment
cols2=c("#882255","#77DDAA") #for the grasshopper treatment
LAR_data_long_form<- grasshopper %>% pivot_longer(cols=c("LAR_1","LAR_2","LAR_3"),
names_to='census',
values_to='LAR')
LAR_data_long_form <- dplyr::select(LAR_data_long_form, LAR, elevation, Genotype, population, Cage, Water, Herbivore, Block, PlantID, init.diam, S_initdiam, Cage_Block, elev_km, S_elev,census, year)
LAR_data_long_form$census[LAR_data_long_form$census == "LAR_1"] <- "1"
LAR_data_long_form$census[LAR_data_long_form$census == "LAR_2"] <- "2"
LAR_data_long_form$census[LAR_data_long_form$census == "LAR_3"] <-"3"
LAR_data_long_form $census <-as.factor(LAR_data_long_form $census)
LAR_data_long_form $year <-as.factor(LAR_data_long_form $year)
#Let's concatenate census and year
LAR_data_long_form $census_year<-interaction(LAR_data_long_form$census, LAR_data_long_form$year,sep = "_")
LAR_data_long_form$LAR_prop<-LAR_data_long_form $LAR/100
hist(LAR_data_long_form$LAR_prop)
LAR_data_long_form <- drop_na(LAR_data_long_form,LAR_prop)
n<-nrow(LAR_data_long_form)
LAR_data_long_form $y_beta<- (LAR_data_long_form $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data_long_form $y_beta)
min(LAR_data_long_form $y_beta)
max(LAR_data_long_form $y_beta)
## model
LAR_Model<- gamlss (formula= y_beta ~S_elev*Water*Herbivore*year+ random(census_year) + random(PlantID)+ random(Cage_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data_long_form,control = gamlss.control(n.cyc = 500))
## creating plot for the cline using visreg, takes a moment to run
damage_cline<-visregList(visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Addition",year="2021"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE), visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Removal",year="2021"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE), visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Addition",year="2022"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Removal",year="2022"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Addition",year="2023"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE), visreg(LAR_Model,"S_elev", by="Water",cond=list("Herbivore"="Removal",year="2023"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),collapse=TRUE)
# remove objects and clear workspace
rm(list = ls(all=TRUE))
##require packages
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for pairwise comparisons
require(glmmTMB) # for running models, have to load twice occasionally
require(gamlss) # for running herbivor damage model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
library(DHARMa) #for assessing model fits
library(ggeffects) #for plotting
library(ggpubr) #for arranging panels into figures
setwd("/Users/inam/Library/CloudStorage/OneDrive-UniversityofGeorgia/Inam_experiments/Herbivory_data/grasshopper/Grasshopper_manuscript_files/Grasshopper_manuscript_31May24/scripts_data/")
##read in data
field <- read.csv("Field_experiment_data", stringsAsFactors = TRUE)
##read in data
field <- read.csv("Field_experiment_data.csv", stringsAsFactors = TRUE)
##Some  variables are being read as characters not factors. Let's fix that
field $cohort <-as.factor(field $cohort)
field $Year <-as.factor(field $Year)
field <- filter(field, Exclude == "Include")
##Let's concatenate garden and block
field $Garden_Block<-interaction(field$garden, field$block,sep = "_")
##This standardizes elevation distance to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
field $S_elev_dist<-scale(field $elev_dist,center=TRUE, scale=TRUE)
##Change the baseline for pesticide treatment
field $Treatment <-factor(field $Treatment, levels = c("Control", "Pesticide"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
field $S_elev<-scale(field $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
field $S_initdiam<-scale(field $initial_size,center=TRUE, scale=TRUE)
cols=c("#CC79A7","lightblue")
cols2=c("#882255","#77DDAA")
hurdle_Model_RM <- glmmTMB( Mature_length_siliques ~S_initdiam+ cohort+Year
+ S_elev*Treatment*garden
+ (1|PlantID) + (1| Garden_Block)+(1|Genotype), data= field,
zi=~S_initdiam +cohort+Year
+ S_elev*Treatment*garden
+ (1|PlantID) + (1|Garden_Block)+(1|Genotype),family=ziGamma(link="log"))
##Use the DHARMa package to examine the residuals
simulationOutput <- simulateResiduals(fittedModel= hurdle_Model_RM, plot = T, re.form = NULL,allow.new.levels =T)
##This is the ANOVA table for the logistic regression part (probability of reproduction).
Anova(hurdle_Model_RM,type="III", component="zi")
##This is the ANOVA table for the count part (fecundity amongst individuals that reproduced).
Anova(hurdle_Model_RM,type="III", component="cond")
##read in data
field <- read.csv("Field_experiment_data.csv", stringsAsFactors = TRUE)
##Some  variables are being read as characters not factors. Let's fix that
field $cohort <-as.factor(field $cohort)
field $Year <-as.factor(field $Year)
field <- filter(field, Exclude == "Include")
##Let's concatenate garden and block
field $Garden_Block<-interaction(field$garden, field$block,sep = "_")
##Change the baseline for pesticide treatment
field $Treatment <-factor(field $Treatment, levels = c("Control", "Pesticide"))
##This standardizes source elevation to a mean of 0 and standard deviation of 1, which is often necessary for model convergence
field $S_elev<-scale(field $elevation,center=TRUE, scale=TRUE)
##This standardizes initial plant size (measured as diameter in mm)  to a mean of 0 and standard deviation of 1 for use as a covariate in fitness models
field $S_initdiam<-scale(field $initial_size,center=TRUE, scale=TRUE)
cols=c("#CC79A7","lightblue")
cols2=c("#882255","#77DDAA")
#*******************************************************************************
hurdle_Model_RM <- glmmTMB( Mature_length_siliques ~S_initdiam+ cohort+Year
+ S_elev*Treatment*garden
+ (1|PlantID) + (1| Garden_Block)+(1|Genotype), data= field,
zi=~S_initdiam +cohort+Year
+ S_elev*Treatment*garden
+ (1|PlantID) + (1|Garden_Block)+(1|Genotype),family=ziGamma(link="log"))
##This is the ANOVA table for the logistic regression part (probability of reproduction).
Anova(hurdle_Model_RM,type="III", component="zi")
##This is the ANOVA table for the count part (fecundity amongst individuals that reproduced).
Anova(hurdle_Model_RM,type="III", component="cond")
##extracting slopes from model
emtrends(hurdle_Model_RM, specs = c("Treatment"), var = "S_elev")
##pairwise comparisons for garden
garden <-emmeans(hurdle_Model_RM, ~ garden, type="response", adjust = "sidak")
fecundity_cline_Treatment<-visreg(hurdle_Model_RM,"S_elev", by="Treatment", overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE,scale="response")
fruited<-subset(field, Mature_length_siliques>0) #file that excludes zeros for fecundity, for plotting count portion of the model
fec_clinal_variation_Treatment<-ggplot(fecundity_cline_Treatment $fit, aes(S_elev, visregFit,group= Treatment, colour= Treatment, fill=factor(Treatment))) + geom_ribbon(aes(ymin=visregLwr, ymax=visregUpr), alpha=0.15, linetype=0) +geom_line(aes(group=Treatment)) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ geom_point(data= fruited, aes(S_elev, Mature_length_siliques, color= Treatment, shape=Treatment), alpha=0.75, color="black")+scale_shape_manual(values=c(22,25), name = "Pesticide treatment", labels = c("Control","Pesticide"))+scale_linetype_manual(values=c("dashed","solid"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.618891, 0.1190577, 1.857007))+ scale_y_continuous("Fecundity (total fruit length, mm)")+scale_fill_manual(values = cols2, name = "Pesticide treatment", labels = c("Control","Pesticide"))+scale_colour_manual(values = cols, name = "Pesticide treatment", labels = c("Control","Pesticide"))+facet_wrap(~Treatment)
fec_clinal_variation_Treatment
LAR_data <- drop_na(field,LAR_aug22)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")#+ facet_grid(census ~  .)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
LAR_data $Garden_Block<-interaction(LAR_data $garden, LAR_data $block,sep = "_")
##Box plot
LAR_box <-ggplot(LAR_data, aes(x = Treatment, y = LAR_prop, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(aes(shape=Treatment),position = position_jitterdodge(0.3))+scale_shape_manual(values=c(22,25))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols2), name = "Treatment", labels = c("Pesticide","Control"))+facet_grid(~garden)
damage_treatment
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment*garden+random(cohort)+ random(Garden_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
LARdat<-field[,c(1:15,23:24)]
LAR_data <- drop_na(LARdat,LAR_aug22)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")#+ facet_grid(census ~  .)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
LAR_data $Garden_Block<-interaction(LAR_data $garden, LAR_data $block,sep = "_")
##Box plot
LAR_box <-ggplot(LAR_data, aes(x = Treatment, y = LAR_prop, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(aes(shape=Treatment),position = position_jitterdodge(0.3))+scale_shape_manual(values=c(22,25))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols2), name = "Treatment", labels = c("Pesticide","Control"))+facet_grid(~garden)
damage_treatment
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment*garden+random(cohort)+ random(Garden_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
View(LAR_data)
#*******************************************************************************
#### 2.leaf damage across censuses #####
#*******************************************************************************
LARdat<-field[,c(1:15,24)]
LAR_data <- drop_na(LARdat,LAR_aug22)
LAR_data$LAR_prop<-LAR_data $LAR/100
hist(LAR_data$LAR_prop)
ggplot(LAR_data, aes(x= LAR_prop))+ geom_histogram(color="black", fill="white")#+ facet_grid(census ~  .)
n<-nrow(LAR_data)
LAR_data $y_beta<- (LAR_data $LAR_prop*(n-1) + 0.5)/n
hist(LAR_data $y_beta)
min(LAR_data $y_beta)
max(LAR_data $y_beta)
LAR_data $S_elev<-scale(LAR_data $elevation,center=TRUE, scale=TRUE)
LAR_data $Garden_Block<-interaction(LAR_data $garden, LAR_data $block,sep = "_")
##Box plot
LAR_box <-ggplot(LAR_data, aes(x = Treatment, y = LAR_prop, fill = Treatment)) +
geom_boxplot(outlier.shape = NA) +xlab("Treatment")+
scale_y_continuous("Leaf area removed by herbivores (proportion)") +
geom_point(aes(shape=Treatment),position = position_jitterdodge(0.3))+scale_shape_manual(values=c(22,25))
damage_treatment<-LAR_box + theme_classic() + theme(text = element_text(size=10),axis.line.x = element_line(colour = "black"),axis.line.y = element_line(colour = "black"), panel.border = element_blank(), panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "none")+ scale_x_discrete() +  scale_fill_manual(values = c(cols2), name = "Treatment", labels = c("Pesticide","Control"))+facet_grid(~garden)
damage_treatment
mod_LAR<- gamlss (formula= y_beta ~S_elev*Treatment*garden+random(cohort)+ random(Garden_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
damage_cline<-visregList(
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Gothic"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Gothic"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Schofield"), overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
visreg(mod_LAR,"S_elev", by="Treatment",cond=list("garden"="Schofield"),overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE),
collapse=TRUE)
damfit<-data.frame(damage_cline$fit)
damfit$visregFITexp<-exp(damfit$visregFit)
damage_clinal_variation<-ggplot(damfit, aes(S_elev, visregFITexp,group= Treatment, colour= Treatment, fill=factor(Treatment))) +theme_classic()+theme(text = element_text(size=10), axis.line.x = element_line(colour = "black"), axis.line.y = element_line(colour = "black"), panel.border = element_blank(),panel.grid.major =element_blank(), panel.grid.minor=element_blank(),legend.position = "Bottom")+ geom_point(data= LAR_data, aes(S_elev, LAR_prop, color= Treatment, shape=Treatment), alpha=0.50, color="black")+scale_shape_manual(values=c(22,25), name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_x_continuous("Source elevation (m)",breaks=c(-1.582062, 0.1322301, 1.846522))+ scale_y_continuous("Leaf area removed by herbivores (proportion)")+scale_fill_manual(values = cols2, name = "Water treatment", labels = c("Restricted","Supplemental"))+scale_colour_manual(values = cols2, name = "Water treatment", labels = c("Restricted","Supplemental"))+ geom_line(aes(group=Treatment),size=1)+scale_linetype_manual(values=c("solid", "dotted"))+facet_grid(~garden)
damage_clinal_variation
##require packages
require(ggplot2) #for plotting
require(visreg) # for plotting
require(car) # to run ANOVA on model output
require(plyr) # for data wrangling
require(dplyr) # for data wrangling
require(tidyr) # for data wrangling
require(effects) # for plotting
require(emmeans) #for pairwise comparisons
require(glmmTMB) # for running models, have to load twice occasionally
require(gamlss) # for running herbivor damage model
require(broom.mixed) #for making tables
require(multcomp) #for pairwise comparisons
require(vioplot) #for violin plots
library(DHARMa) #for assessing model fits
library(ggeffects) #for plotting
library(ggpubr) #for arranging panels into figures
mod_LAR<- gamlss (formula= y_beta ~S_elev+Treatment*garden+random(cohort)+ random(Garden_Block)+random(Genotype),family=BE(mu.link = "logit"), data=LAR_data,control = gamlss.control(n.cyc = 500))
summary(mod_LAR)
#summary(mod_LAR)
## Save  model to .rda file
#save(mod_LAR, file='mod_LAR.rda')
drop1(mod_LAR)
visreg(mod_LAR,"Treatment", by="garden", overlay = FALSE, partial = FALSE, rug = FALSE,plot=FALSE)
visreg(mod_LAR,"Treatment", by="garden", overlay = FALSE, partial = FALSE, rug = FALSE,plot=true)
visreg(mod_LAR,"Treatment", by="garden", overlay = FALSE, partial = FALSE, rug = FALSE,plot=TRUE)
